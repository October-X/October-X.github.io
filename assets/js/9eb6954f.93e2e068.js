"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6363],{3905:(n,e,t)=>{t.d(e,{Zo:()=>u,kt:()=>k});var a=t(7294);function l(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function r(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){l(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function s(n,e){if(null==n)return{};var t,a,l=function(n,e){if(null==n)return{};var t,a,l={},i=Object.keys(n);for(a=0;a<i.length;a++)t=i[a],e.indexOf(t)>=0||(l[t]=n[t]);return l}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(a=0;a<i.length;a++)t=i[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(l[t]=n[t])}return l}var o=a.createContext({}),p=function(n){var e=a.useContext(o),t=e;return n&&(t="function"==typeof n?n(e):r(r({},e),n)),t},u=function(n){var e=p(n.components);return a.createElement(o.Provider,{value:e},n.children)},c="mdxType",d={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(n,e){var t=n.components,l=n.mdxType,i=n.originalType,o=n.parentName,u=s(n,["components","mdxType","originalType","parentName"]),c=p(t),m=l,k=c["".concat(o,".").concat(m)]||c[m]||d[m]||i;return t?a.createElement(k,r(r({ref:e},u),{},{components:t})):a.createElement(k,r({ref:e},u))}));function k(n,e){var t=arguments,l=e&&e.mdxType;if("string"==typeof n||l){var i=t.length,r=new Array(i);r[0]=m;var s={};for(var o in e)hasOwnProperty.call(e,o)&&(s[o]=e[o]);s.originalType=n,s[c]="string"==typeof n?n:l,r[1]=s;for(var p=2;p<i;p++)r[p]=t[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},320:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=t(7462),l=(t(7294),t(3905));const i={},r="\u7b2c12\u7ae0 Java\u96c6\u5408\u6846\u67b6",s={unversionedId:"Java/JavaSE/Java\u96c6\u5408\u6846\u67b6",id:"Java/JavaSE/Java\u96c6\u5408\u6846\u67b6",title:"\u7b2c12\u7ae0 Java\u96c6\u5408\u6846\u67b6",description:"\u4e00\u3001\u96c6\u5408\u5927\u7eb2",source:"@site/docs/Java/1.JavaSE/11.Java\u96c6\u5408\u6846\u67b6.md",sourceDirName:"Java/1.JavaSE",slug:"/Java/JavaSE/Java\u96c6\u5408\u6846\u67b6",permalink:"/docs/Java/JavaSE/Java\u96c6\u5408\u6846\u67b6",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Java/1.JavaSE/11.Java\u96c6\u5408\u6846\u67b6.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{},sidebar:"Java",previous:{title:"\u7b2c11\u7ae0 \u6570\u636e\u7ed3\u6784\u4e4b\u2014\u2014\u6811",permalink:"/docs/Java/JavaSE/\u6570\u636e\u7ed3\u6784\u4e4b\u2014\u2014\u6811"},next:{title:"\u7b2c13\u7ae0 IO\u6d41",permalink:"/docs/Java/JavaSE/IO\u6d41"}},o={},p=[{value:"\u4e00\u3001\u96c6\u5408\u5927\u7eb2",id:"\u4e00\u96c6\u5408\u5927\u7eb2",level:2},{value:"1\u3001\u96c6\u5408\u7684\u7ee7\u627f\u7ed3\u6784",id:"1\u96c6\u5408\u7684\u7ee7\u627f\u7ed3\u6784",level:3},{value:"2\u3001\u5e38\u7528\u63a5\u53e3\u4ecb\u7ecd",id:"2\u5e38\u7528\u63a5\u53e3\u4ecb\u7ecd",level:3},{value:"\u4e8c\u3001\u96c6\u5408\u7684\u589e\u5220\u6539\u67e5",id:"\u4e8c\u96c6\u5408\u7684\u589e\u5220\u6539\u67e5",level:2},{value:"\u4e09\u3001\u6e90\u7801\u5206\u6790",id:"\u4e09\u6e90\u7801\u5206\u6790",level:2},{value:"1\u3001Arraylist",id:"1arraylist",level:3},{value:"\uff081\uff09\u6210\u5458\u53d8\u91cf",id:"1\u6210\u5458\u53d8\u91cf",level:4},{value:"\uff082\uff09\u6784\u9020\u5668",id:"2\u6784\u9020\u5668",level:4},{value:"\uff083\uff09add\u65b9\u6cd5",id:"3add\u65b9\u6cd5",level:4},{value:"\uff084\uff09\u67e5\u627e\u548c\u5220\u9664",id:"4\u67e5\u627e\u548c\u5220\u9664",level:4},{value:"2\u3001linkedlist",id:"2linkedlist",level:3},{value:"\uff081\uff09\u6210\u5458\u53d8\u91cf",id:"1\u6210\u5458\u53d8\u91cf-1",level:4},{value:"\uff082\uff09\u6784\u9020\u5668",id:"2\u6784\u9020\u5668-1",level:4},{value:"\uff083\uff09\u6dfb\u52a0\u7684\u65b9\u6cd5",id:"3\u6dfb\u52a0\u7684\u65b9\u6cd5",level:4},{value:"\uff084\uff09\u67e5\u627e\u548c\u5220\u9664",id:"4\u67e5\u627e\u548c\u5220\u9664-1",level:4},{value:"3\u3001hashmap",id:"3hashmap",level:3},{value:"\uff081\uff09\u521d\u6b65\u4e86\u89e3",id:"1\u521d\u6b65\u4e86\u89e3",level:4},{value:"\uff082\uff09\u6210\u5458\u53d8\u91cf\u7684\u5206\u6790",id:"2\u6210\u5458\u53d8\u91cf\u7684\u5206\u6790",level:4},{value:"\uff083\uff09\u6784\u9020",id:"3\u6784\u9020",level:4},{value:"\uff084\uff09put\u65b9\u6cd5",id:"4put\u65b9\u6cd5",level:4},{value:"\uff085\uff09\u6269\u5bb9\u7684\u65b9\u6cd5",id:"5\u6269\u5bb9\u7684\u65b9\u6cd5",level:4},{value:"\uff086\uff09\u6811\u5316\u7684\u90e8\u5206\u4ee3\u7801",id:"6\u6811\u5316\u7684\u90e8\u5206\u4ee3\u7801",level:4},{value:"4\u3001hashset",id:"4hashset",level:3},{value:"\u56db\u3001\u96c6\u5408\u7684\u904d\u5386",id:"\u56db\u96c6\u5408\u7684\u904d\u5386",level:2},{value:"1\u3001\u666e\u901afor\u5faa\u73af",id:"1\u666e\u901afor\u5faa\u73af",level:3},{value:"2\u3001\u8fed\u4ee3\u5668",id:"2\u8fed\u4ee3\u5668",level:3},{value:"\uff081\uff09\u8fed\u4ee3\u5668\u4ecb\u7ecd",id:"1\u8fed\u4ee3\u5668\u4ecb\u7ecd",level:4},{value:"\uff082\uff09\u8fed\u4ee3\u5668\u7684\u4f7f\u7528",id:"2\u8fed\u4ee3\u5668\u7684\u4f7f\u7528",level:4},{value:"3\u3001\u589e\u5f3afor\u5faa\u73af",id:"3\u589e\u5f3afor\u5faa\u73af",level:3},{value:"4\u3001\u8fed\u4ee3\u4e2d\u5220\u9664\u5143\u7d20",id:"4\u8fed\u4ee3\u4e2d\u5220\u9664\u5143\u7d20",level:3},{value:"\uff081\uff09for\u5faa\u73af\u4e2d\u5220\u9664",id:"1for\u5faa\u73af\u4e2d\u5220\u9664",level:4},{value:"\uff082\uff09\u4f7f\u7528\u8fed\u4ee3\u5668\u5220\u9664\u5143\u7d20",id:"2\u4f7f\u7528\u8fed\u4ee3\u5668\u5220\u9664\u5143\u7d20",level:4},{value:"\u4e94\u3001\u5176\u4ed6\u7684\u96c6\u5408\u7c7b",id:"\u4e94\u5176\u4ed6\u7684\u96c6\u5408\u7c7b",level:2},{value:"1\u3001Linkedhashmap",id:"1linkedhashmap",level:3},{value:"2\u3001TreeMap",id:"2treemap",level:3},{value:"3\u3001Collections",id:"3collections",level:3},{value:"\u516d\u3001\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898",id:"\u516d\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898",level:2},{value:"1\u3001\u5e76\u53d1\u4fee\u6539\u5f02\u5e38",id:"1\u5e76\u53d1\u4fee\u6539\u5f02\u5e38",level:3},{value:"2\u3001\u6570\u636e\u9519\u8bef\u7684\u95ee\u9898",id:"2\u6570\u636e\u9519\u8bef\u7684\u95ee\u9898",level:3},{value:"3\u3001\u52a0\u9501\u89e3\u51b3",id:"3\u52a0\u9501\u89e3\u51b3",level:3},{value:"4\u3001\u76ee\u524d\u5e38\u7528\u7684\u7ebf\u7a0b\u5b89\u5168\u96c6\u5408",id:"4\u76ee\u524d\u5e38\u7528\u7684\u7ebf\u7a0b\u5b89\u5168\u96c6\u5408",level:3},{value:"\uff081\uff09CopyOnWriteList",id:"1copyonwritelist",level:4},{value:"\uff082\uff09ConcurrentHashMap",id:"2concurrenthashmap",level:4},{value:"5\u3001guava\u63d0\u4f9b\u7684\u4e0d\u53ef\u53d8\u96c6\u5408",id:"5guava\u63d0\u4f9b\u7684\u4e0d\u53ef\u53d8\u96c6\u5408",level:3},{value:"\u4e03\u3001JUnit\u5355\u5143\u6d4b\u8bd5",id:"\u4e03junit\u5355\u5143\u6d4b\u8bd5",level:2},{value:"1\u3001JUnit \u5165\u95e8",id:"1junit-\u5165\u95e8",level:3},{value:"2\u3001JUnit \u65ad\u8a00",id:"2junit-\u65ad\u8a00",level:3},{value:"3\u3001JUnit \u6ce8\u89e3",id:"3junit-\u6ce8\u89e3",level:3},{value:"4\u3001\u547d\u540d\u89c4\u8303",id:"4\u547d\u540d\u89c4\u8303",level:3},{value:"\u516d\u3001\u6027\u80fd\u5bf9\u6bd4",id:"\u516d\u6027\u80fd\u5bf9\u6bd4",level:2},{value:"1\u3001Hashtable\u548cConcurrentHashMap",id:"1hashtable\u548cconcurrenthashmap",level:3},{value:"2\u3001arraylist\u548clinkedlist",id:"2arraylist\u548clinkedlist",level:3},{value:"\uff081\uff09\u987a\u5e8f\u6dfb\u52a0",id:"1\u987a\u5e8f\u6dfb\u52a0",level:4},{value:"\uff082\uff09\u4f7f\u7528for\u5faa\u73af\u8fed\u4ee3\u83b7\u53d6",id:"2\u4f7f\u7528for\u5faa\u73af\u8fed\u4ee3\u83b7\u53d6",level:4},{value:"\uff083\uff09\u4f7f\u7528\u8fed\u4ee3\u5668\u8fed\u4ee3\u83b7\u53d6",id:"3\u4f7f\u7528\u8fed\u4ee3\u5668\u8fed\u4ee3\u83b7\u53d6",level:4},{value:"\uff084\uff09\u5934\u63d2",id:"4\u5934\u63d2",level:4},{value:"\uff085\uff09\u968f\u673a\u5220\u9664",id:"5\u968f\u673a\u5220\u9664",level:4},{value:"\uff086\uff09\u81ea\u5e26\u7684\u6392\u5e8f\u65b9\u6cd5",id:"6\u81ea\u5e26\u7684\u6392\u5e8f\u65b9\u6cd5",level:4},{value:"\uff087\uff09\u601d\u8003",id:"7\u601d\u8003",level:4},{value:"\u4e03\u3001Java8\u7279\u6027",id:"\u4e03java8\u7279\u6027",level:2},{value:"1\u3001\u63a5\u53e3\u9ed8\u8ba4\u65b9\u6cd5",id:"1\u63a5\u53e3\u9ed8\u8ba4\u65b9\u6cd5",level:3},{value:"2\u3001\u51fd\u6570\u5f0f\u63a5\u53e3",id:"2\u51fd\u6570\u5f0f\u63a5\u53e3",level:3},{value:"3\u3001Optional",id:"3optional",level:3},{value:"\uff081\uff09\u7b80\u4ecb",id:"1\u7b80\u4ecb",level:4},{value:"\uff082\uff09Optional\u5bf9\u8c61\u7684\u521b\u5efa",id:"2optional\u5bf9\u8c61\u7684\u521b\u5efa",level:4},{value:"\uff083\uff09Optional \u7c7b\u5178\u578b\u63a5\u53e3\u7684\u4f7f\u7528",id:"3optional-\u7c7b\u5178\u578b\u63a5\u53e3\u7684\u4f7f\u7528",level:4},{value:"\u516b\u3001Stream\u7f16\u7a0b",id:"\u516bstream\u7f16\u7a0b",level:2},{value:"1\u3001Stream\u6d41\u7684\u521b\u5efa",id:"1stream\u6d41\u7684\u521b\u5efa",level:3},{value:"2\u3001Stream\u7684\u7ec8\u6b62\u64cd\u4f5c",id:"2stream\u7684\u7ec8\u6b62\u64cd\u4f5c",level:3},{value:"\uff081\uff09\u904d\u5386/\u5339\u914d\uff08foreach/find/match\uff09",id:"1\u904d\u5386\u5339\u914dforeachfindmatch",level:4},{value:"\uff082\uff09\u5f52\u96c6(toList/toSet/toMap)",id:"2\u5f52\u96c6tolisttosettomap",level:4},{value:"\uff083\uff09 \u7edf\u8ba1(count/averaging/sum/max/min\uff09",id:"3-\u7edf\u8ba1countaveragingsummaxmin",level:4},{value:"\uff084\uff09\u5f52\u7ea6(reduce)",id:"4\u5f52\u7ea6reduce",level:4},{value:"\uff085\uff09\u63a5\u5408(joining)",id:"5\u63a5\u5408joining",level:4},{value:"\uff086\uff09\u5206\u7ec4(partitioningBy/groupingBy)",id:"6\u5206\u7ec4partitioningbygroupingby",level:4},{value:"3\u3001Stream\u4e2d\u95f4\u64cd\u4f5c",id:"3stream\u4e2d\u95f4\u64cd\u4f5c",level:3},{value:"\uff081\uff09\u7b5b\u9009\uff08filter\uff09",id:"1\u7b5b\u9009filter",level:4},{value:"\uff082\uff09\u6620\u5c04(map/flatMap)",id:"2\u6620\u5c04mapflatmap",level:4},{value:"\uff083\uff09\u6392\u5e8f(sorted)",id:"3\u6392\u5e8fsorted",level:4},{value:"\uff084\uff09peek\u64cd\u4f5c",id:"4peek\u64cd\u4f5c",level:4},{value:"\uff085\uff09\u5176\u4ed6\u64cd\u4f5c",id:"5\u5176\u4ed6\u64cd\u4f5c",level:4}],u={toc:p};function c(n){let{components:e,...t}=n;return(0,l.kt)("wrapper",(0,a.Z)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"\u7b2c12\u7ae0-java\u96c6\u5408\u6846\u67b6"},"\u7b2c12\u7ae0 Java\u96c6\u5408\u6846\u67b6"),(0,l.kt)("h2",{id:"\u4e00\u96c6\u5408\u5927\u7eb2"},"\u4e00\u3001\u96c6\u5408\u5927\u7eb2"),(0,l.kt)("h3",{id:"1\u96c6\u5408\u7684\u7ee7\u627f\u7ed3\u6784"},"1\u3001\u96c6\u5408\u7684\u7ee7\u627f\u7ed3\u6784"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://www.ydlclass.com/doc21xnv/assets/image-20210717194609366-93d65fe8.png",alt:"image-20210717194609366"}),"image-20210717194609366"),(0,l.kt)("p",null,"\u5176\u5b9e\u6709\u4e86\u6211\u4eec\u7684\u8d85\u7ea7\u6570\u7ec4\u7684\u5b9e\u6218\u4e4b\u540e\uff0c\u6211\u4eec\u5b66\u4e60\u96c6\u5408\u5c06\u4f1a\u5f88\u5bb9\u6613\uff0cjava\u7684\u96c6\u5408\u6846\u67b6\u5c31\u662f\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u5957\u66f4\u52a0\u65b9\u4fbf\u7684\u5b58\u50a8\u6570\u636e\u7684\u7c7b\u800c\u5df2\u3002"),(0,l.kt)("p",null,"\u96c6\u5408\u7684\u76ee\u7684\u662f\u65b9\u4fbf\u7684\u5b58\u50a8\u548c\u64cd\u4f5c\u6570\u636e\uff0c\u5176\u5b9e\u8bf4\u5230\u5e95\u65e0\u975e\u5c31\u662f",(0,l.kt)("inlineCode",{parentName:"p"},"\u589e\u5220\u6539\u67e5"),"\u3002"),(0,l.kt)("h3",{id:"2\u5e38\u7528\u63a5\u53e3\u4ecb\u7ecd"},"2\u3001\u5e38\u7528\u63a5\u53e3\u4ecb\u7ecd"),(0,l.kt)("p",null,"List\uff08 \u5217\u8868\uff09\u7ebf\u6027\u8868\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u548c\u6570\u7ec4\u7c7b\u4f3c\uff0cList\u53ef\u4ee5\u52a8\u6001\u589e\u957f\uff0c\u67e5\u627e\u5143\u7d20\u6548\u7387\u9ad8\uff0c\u63d2\u5165\u5220\u9664\u5143\u7d20\u6548\u7387\u4f4e\uff0c\u56e0\u4e3a\u4f1a\u5f15\u8d77\u5176\u4ed6\u5143\u7d20\u4f4d\u7f6e\u6539\u53d8\u3002")),(0,l.kt)("p",null,"Set\uff08\u8868\uff09\u4e5f\u662f\u7ebf\u6027\u8868"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u68c0\u7d22\u5143\u7d20\u6548\u7387\u4f4e\u4e0b\uff0c\u5220\u9664\u548c\u63d2\u5165\u6548\u7387\u9ad8\uff0c\u63d2\u5165\u548c\u5220\u9664\u4e0d\u4f1a\u5f15\u8d77\u5143\u7d20\u4f4d\u7f6e\u6539\u53d8\u3002")),(0,l.kt)("p",null,"Map\uff08\u6620\u5c04\uff09"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Map\uff08\u6620\u5c04\uff09\u7528\u4e8e\u4fdd\u5b58\u5177\u6709\u6620\u5c04\u5173\u7cfb\u7684\u6570\u636e\uff0cMap\u91cc\u4fdd\u5b58\u7740\u4e24\u7ec4\u6570\u636e\uff1akey\u548cvalue\uff0c\u5b83\u4eec\u90fd\u53ef\u4ee5\u662f\u4efb\u4f55\u5f15\u7528\u7c7b\u578b\u7684\u6570\u636e\uff0c\u4f46key\u4e0d\u80fd\u91cd\u590d\u3002\u6240\u4ee5\u901a\u8fc7\u6307\u5b9a\u7684key\u5c31\u53ef\u4ee5\u53d6\u51fa\u5bf9\u5e94\u7684value\u3002"),(0,l.kt)("li",{parentName:"ul"},"List\uff0cSet\u90fd\u662f\u7ee7\u627f\u81eaCollection\u63a5\u53e3\uff0cMap\u5219\u4e0d\u662f")),(0,l.kt)("h2",{id:"\u4e8c\u96c6\u5408\u7684\u589e\u5220\u6539\u67e5"},"\u4e8c\u3001\u96c6\u5408\u7684\u589e\u5220\u6539\u67e5"),(0,l.kt)("p",null,"\u601d\u8003\uff0c\u5176\u5b9e\u6211\u4eec\u80fd\u4ece\u51e0\u4e2a\u63a5\u53e3\u6e90\u7801\u4e2d\u770b\u660e\u767d\u96c6\u5408\u5230\u5e95\u662f\u600e\u4e48\u8fdb\u884c\u589e\u5220\u6539\u67e5\u7684\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"public interface List<E> extends Collection<E> {\n\n    int size();\n\n    boolean isEmpty();\n\n    boolean contains(Object o);\n\n    Iterator<E> iterator();\n\n    <T> T[] toArray(T[] a);\n\n    boolean add(E e);\n\n    boolean remove(Object o);\n\n    boolean containsAll(Collection<?> c);\n\n    boolean addAll(Collection<? extends E> c);\n\n    boolean addAll(int index, Collection<? extends E> c);\n\n    boolean removeAll(Collection<?> c);\n\n    void clear();\n\n    E get(int index);\n\n    E set(int index, E element);\n\n    void add(int index, E element);\n\n    E remove(int index);\n\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"// \u4f60\u4f1a\u53d1\u73b0set\u5929\u7136\u6ca1\u6709\u4fee\u6539\u7684\u65b9\u6cd5\npublic interface Set<E> extends Collection<E> {\n \n    int size();\n\n    boolean isEmpty();\n\n    boolean contains(Object o);\n\n    Iterator<E> iterator();\n\n    Object[] toArray();\n\n    <T> T[] toArray(T[] a);\n\n    boolean add(E e);\n\n    boolean remove(Object o);\n\n    boolean containsAll(Collection<?> c);\n\n    boolean addAll(Collection<? extends E> c);\n\n    boolean removeAll(Collection<?> c);\n\n    void clear();\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"public interface Map<K,V> {\n\n    int size();\n\n    boolean isEmpty();\n\n    boolean containsKey(Object key);\n\n    boolean containsValue(Object value);\n\n    V get(Object key);\n\n    V put(K key, V value);\n\n    V remove(Object key);\n\n    void putAll(Map<? extends K, ? extends V> m);\n\n    void clear();\n\n    Set<K> keySet();\n\n    Collection<V> values();\n\n    Set<Map.Entry<K, V>> entrySet();\n}\n")),(0,l.kt)("h2",{id:"\u4e09\u6e90\u7801\u5206\u6790"},"\u4e09\u3001\u6e90\u7801\u5206\u6790"),(0,l.kt)("p",null,"\u672c\u8282\u77e5\u8bc6\u6bd4\u8f83\u96be\uff0c\u5927\u5bb6\u91cf\u529b\u800c\u884c\uff0c\u80fd\u5b66\u4f1a\u591a\u5c11\u662f\u591a\u5c11\uff0c\u7279\u522b\u662fhashmap\u3002",(0,l.kt)("strong",{parentName:"p"},"\u672c\u8282\u7684\u5185\u5bb9\u53ef\u4ee5\u73b0\u5728\u5b66\u4e60\uff0c\u4e5f\u53ef\u4ee5\u4ee5\u540e\u5b66\u4e60\u3002")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u7b2c\u4e00\u6b21\u770b\u6e90\u7801\uff0c\u8bf4\u8bf4\u6ce8\u610f\u7684\u95ee\u9898\uff1a")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4e00\u5b9a\u8981\u8ddf\u7740\u6211\u7684\u8282\u594f\u770b\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u4e00\u5b9a\u8981\u4e13\u6ce8\uff0c\u9700\u8981\u4e0a\u4e0b\u6587\u7684\u7ed3\u5408\u9605\u8bfb\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u4e0d\u8981\u592a\u6263\u7ec6\u8282\uff0c\u628a\u6e90\u4ee3\u7801\u7684\u6574\u4f53\u601d\u8def\u9605\u8bfb\u4e0b\u6765\u5c31\u884c\u4e86\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6709\u65f6\u95f4\u591a\u8bfb\u51e0\u6b21\uff0c\u6162\u6162\u8131\u79bb\u6211\u7684\u89c6\u9891\u3002")),(0,l.kt)("h3",{id:"1arraylist"},"1\u3001Arraylist"),(0,l.kt)("h4",{id:"1\u6210\u5458\u53d8\u91cf"},"\uff081\uff09\u6210\u5458\u53d8\u91cf"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"// \u9ed8\u8ba4\u7684\u7a7a\u6570\u7ec4\nprivate static final Object[] DEFAULTCAPACITY_EMPTY_ELEMENTDATA = {};\n\n// \u5b9e\u9645\u5b58\u6570\u636e\u7684\u6570\u7ec4\ntransient Object[] elementData; \n\n// \u9ed8\u8ba4\u5bb9\u91cf\nprivate static final int DEFAULT_CAPACITY = 10;\n")),(0,l.kt)("h4",{id:"2\u6784\u9020\u5668"},"\uff082\uff09\u6784\u9020\u5668"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'// \u9ed8\u8ba4\u4f7f\u7528\u7a7a\u6570\u7ec4\npublic ArrayList() {\n    this.elementData = DEFAULTCAPACITY_EMPTY_ELEMENTDATA;\n}\n\npublic ArrayList(int initialCapacity) {\n    if (initialCapacity > 0) {\n        this.elementData = new Object[initialCapacity];\n    } else if (initialCapacity == 0) {\n        this.elementData = EMPTY_ELEMENTDATA;\n    } else {\n        throw new IllegalArgumentException("Illegal Capacity: "+\n                                           initialCapacity);\n    }\n}\n\n// ArrayList\u8fd8\u53ef\u4ee5\u76f4\u63a5\u4f20\u5165\u4e00\u4e2a\u96c6\u5408\npublic ArrayList(Collection<? extends E> c) {\n    elementData = c.toArray();\n    if ((size = elementData.length) != 0) {\n        // \u96c6\u5408\u4e2d\u6709\u6570\u636e\u5c31\u62f7\u8d1d\u6570\u636e\n        if (elementData.getClass() != Object[].class)\n            elementData = Arrays.copyOf(elementData, size, Object[].class);\n    } else {\n        // replace with empty array.\n        this.elementData = EMPTY_ELEMENTDATA;\n    }\n}\n')),(0,l.kt)("h4",{id:"3add\u65b9\u6cd5"},"\uff083\uff09add\u65b9\u6cd5"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"public boolean add(E e) {\n    // \u786e\u4fdd\u80fd\u4e0d\u80fd\u653e\u8fdb\u53bb\n    ensureCapacityInternal(size + 1);  \n    elementData[size++] = e;\n    return true;\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"private void ensureCapacityInternal(int minCapacity) {\n    ensureExplicitCapacity(calculateCapacity(elementData, minCapacity));\n}\n\n// \u6839\u636e\u6570\u7ec4\u957f\u5ea6\u548c\u4f20\u5165\u7684\u5bb9\u91cf\u503c\u8ba1\u7b97\u5bb9\u91cf\nprivate static int calculateCapacity(Object[] elementData, int minCapacity) {\n    // \u521d\u59cb\u5316\u65f6 \u5c31\u662f\u7a7a\u554a\uff0c\u4ed6\u4f1a\u9009\u62e910\u5f53\u4ed6\u7684\u5bb9\u91cf\u503c\u3002\n    if (elementData == DEFAULTCAPACITY_EMPTY_ELEMENTDATA) {\n        return Math.max(DEFAULT_CAPACITY, minCapacity);\n    }\n    return minCapacity;\n}\n\nprivate void ensureExplicitCapacity(int minCapacity) {\u3001\n    // \u8bb0\u5f55\u4e86\u96c6\u5408\u88ab\u4fee\u6539\u7684\u6b21\u6570\n    modCount++;\n    if (minCapacity - elementData.length > 0)\n        grow(minCapacity);\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"}," // \u6570\u7ec4\u6269\u5bb9\u7684\u5730\u65b9\nprivate void grow(int minCapacity) {\n    // \u83b7\u53d6\u65e7\u7684\u5bb9\u91cf\n    int oldCapacity = elementData.length;\n    // \u5f88\u660e\u663e\u6269\u5bb9\u4e861.5\u500d\n    int newCapacity = oldCapacity + (oldCapacity >> 1);\n    if (newCapacity - minCapacity < 0)\n        newCapacity = minCapacity;\n    if (newCapacity - MAX_ARRAY_SIZE > 0)\n        newCapacity = hugeCapacity(minCapacity);\n    // \u6269\u5bb9\u540e\u62f7\u8d1d\u6570\u636e\n    elementData = Arrays.copyOf(elementData, newCapacity);\n}\n")),(0,l.kt)("h4",{id:"4\u67e5\u627e\u548c\u5220\u9664"},"\uff084\uff09\u67e5\u627e\u548c\u5220\u9664"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"public E get(int index) {\n    rangeCheck(index);\n    return elementData(index);\n}\n\nE elementData(int index) {\n    return (E) elementData[index];\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"public E remove(int index) {\n    rangeCheck(index);\n\n    modCount++;\n    E oldValue = elementData(index);\n    int numMoved = size - index - 1;\n    if (numMoved > 0)\n        // System.arraycopy \n        //  Object src : \u539f\u6570\u7ec4\n        //  int srcPos : \u4ece\u5143\u6570\u636e\u7684\u8d77\u59cb\u4f4d\u7f6e\u5f00\u59cb\n\u3000\u3000     //  Object dest : \u76ee\u6807\u6570\u7ec4\n\u3000\u3000     //  int destPos : \u76ee\u6807\u6570\u7ec4\u7684\u5f00\u59cb\u8d77\u59cb\u4f4d\u7f6e\n\u3000\u3000     //  int length  : \u8981copy\u7684\u6570\u7ec4\u7684\u957f\u5ea6\n        System.arraycopy(elementData, index+1, elementData, index,\n                         numMoved);\n    elementData[--size] = null; \n    return oldValue;\n}\n")),(0,l.kt)("p",null,"\u6e90\u7801\u91cc\u80fd\u770b\u5230\u7684\u4fe1\u606f\uff1a"),(0,l.kt)("p",null,"1\u3001arraylist\u662f\u57fa\u4e8e\u6570\u7ec4\u5b9e\u73b0\u7684\u3002"),(0,l.kt)("p",null,"2\u3001\u9ed8\u8ba4\u5bb9\u91cf\u662f10\uff0c\u6bcf\u6b21\u6269\u5bb9\u662f1.5\u500d\u7684\u6269\u5bb9\uff08oldCapacity + (oldCapacity >> 1)\uff09\u3002"),(0,l.kt)("h3",{id:"2linkedlist"},"2\u3001linkedlist"),(0,l.kt)("h4",{id:"1\u6210\u5458\u53d8\u91cf-1"},"\uff081\uff09\u6210\u5458\u53d8\u91cf"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"transient int size = 0;\n\n// \u4fdd\u5b58\u5934\u7ed3\u70b9\ntransient Node<E> first;\n\n// \u4fdd\u5b58\u5c3e\u8282\u70b9\ntransient Node<E> last;\n\n// \u8282\u70b9\u7684\u5b9a\u4e49\nprivate static class Node<E> {\n    E item;\n    Node<E> next;\n    Node<E> prev;\n\n    Node(Node<E> prev, E element, Node<E> next) {\n        this.item = element;\n        this.next = next;\n        this.prev = prev;\n    }\n}\n")),(0,l.kt)("p",null,"\u5f88\u660e\u663e\uff0c\u8fd9\u91cc\u80fd\u591f\u770b\u51falinkedlist\u662f\u57fa\u4e8e\u53cc\u5411\u94fe\u8868\u5b9e\u73b0\u7684\u3002"),(0,l.kt)("h4",{id:"2\u6784\u9020\u5668-1"},"\uff082\uff09\u6784\u9020\u5668"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"/**\n  * Constructs an empty list.\n  */\npublic LinkedList() {\n}\n\n/**\n  * Constructs a list containing the elements of the specified\n  * collection, in the order they are returned by the collection's\n  * iterator.\n  *\n  * @param  c the collection whose elements are to be placed into this list\n  * @throws NullPointerException if the specified collection is null\n  */\npublic LinkedList(Collection<? extends E> c) {\n    this();\n    addAll(c);\n}\n")),(0,l.kt)("h4",{id:"3\u6dfb\u52a0\u7684\u65b9\u6cd5"},"\uff083\uff09\u6dfb\u52a0\u7684\u65b9\u6cd5"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"// \u5934\u4e0a\u6dfb\u52a0\nprivate void linkFirst(E e) {\n    final Node<E> f = first;\n    final Node<E> newNode = new Node<>(null, e, f);\n    first = newNode;\n    if (f == null)\n        last = newNode;\n    else\n        f.prev = newNode;\n    size++;\n    modCount++;\n}    \n    \n// \u5c3e\u5df4\u4e0a\u6dfb\u52a0    \nvoid linkLast(E e) {\n    final Node<E> l = last;\n    final Node<E> newNode = new Node<>(l, e, null);\n    last = newNode;\n    if (l == null)\n        first = newNode;\n    else\n        l.next = newNode;\n    size++;\n    modCount++;\n}\n \n// \u5728\u67d0\u4e2a\u5143\u7d20\u4e4b\u524d\u6dfb\u52a0\nvoid linkBefore(E e, Node<E> succ) {\n    // assert succ != null;\n    final Node<E> pred = succ.prev;\n    final Node<E> newNode = new Node<>(pred, e, succ);\n    succ.prev = newNode;\n    if (pred == null)\n        first = newNode;\n    else\n        pred.next = newNode;\n    size++;\n    modCount++;\n}\n\n// \u65ad\u5f00\u5934\u90e8\nprivate E unlinkFirst(Node<E> f) {\n    // assert f == first && f != null;\n    final E element = f.item;\n    final Node<E> next = f.next;\n    f.item = null;\n    f.next = null; // help GC\n    first = next;\n    if (next == null)\n        last = null;\n    else\n        next.prev = null;\n    size--;\n    modCount++;\n    return element;\n}\n\n// \u65ad\u5f00\u5c3e\u5df4\nprivate E unlinkLast(Node<E> l) {\n    // assert l == last && l != null;\n    final E element = l.item;\n    final Node<E> prev = l.prev;\n    l.item = null;\n    l.prev = null; // help GC\n    last = prev;\n    if (prev == null)\n        first = null;\n    else\n        prev.next = null;\n    size--;\n    modCount++;\n    return element;\n}\n\n// \u65ad\u5f00\u67d0\u4e00\u4e2a\u8282\u70b9\nE unlink(Node<E> x) {\n    // assert x != null;\n    final E element = x.item;\n    final Node<E> next = x.next;\n    final Node<E> prev = x.prev;\n\n    if (prev == null) {\n        first = next;\n    } else {\n        prev.next = next;\n        x.prev = null;\n    }\n\n    if (next == null) {\n        last = prev;\n    } else {\n        next.prev = prev;\n        x.next = null;\n    }\n\n    x.item = null;\n    size--;\n    modCount++;\n    return element;\n}\n\n// \u8fd9\u4e24\u4e2a\u65b9\u6cd5\u4e2dlist\u63a5\u53e3\u4e2d\u6ca1\u6709\uff0c\u662fLinkedList\u7c7b\u4e2d\u7279\u6709\u7684\u3002\npublic void addFirst(E e) {\n    linkFirst(e);\n}\npublic void addLast(E e) {\n    linkLast(e);\n}\n\n// \u9ed8\u8ba4\u7684\u6dfb\u52a0\u662f\u7ed9\u5c3e\u5df4\u6dfb\u52a0\npublic boolean add(E e) {\n    linkLast(e);\n    return true;\n}\n")),(0,l.kt)("h4",{id:"4\u67e5\u627e\u548c\u5220\u9664-1"},"\uff084\uff09\u67e5\u627e\u548c\u5220\u9664"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"public E get(int index) {\n    checkElementIndex(index);\n    return node(index).item;\n}\n// \u627e\u5230\u7b2c\u51e0\u4e2anode\nNode<E> node(int index) {\n    // \u770b\u4eba\u5bb6\u7684\u68c0\u7d22\uff0c\u5c0f\u4e8e\u4e00\u534a\u5c31\u4ece\u5934\u68c0\u7d22\uff0c\u5426\u5219\u4ece\u5c3e\u5df4\u68c0\u7d22\n    if (index < (size >> 1)) {\n        Node<E> x = first;\n        for (int i = 0; i < index; i++)\n            x = x.next;\n        return x;\n    } else {\n        Node<E> x = last;\n        for (int i = size - 1; i > index; i--)\n            x = x.prev;\n        return x;\n    }\n}\n\n// \u83b7\u53d6\u5934\u7ed3\u70b9\npublic E getFirst() {\n    final Node<E> f = first;\n    if (f == null)\n        throw new NoSuchElementException();\n    return f.item;\n}\n\n// \u83b7\u53d6\u5c3e\u8282\u70b9\npublic E getLast() {\n    final Node<E> l = last;\n    if (l == null)\n        throw new NoSuchElementException();\n    return l.item;\n}\n\n// \u5220\u9664\u9ed8\u8ba4\u5220\u9664\u5934\npublic E remove() {\n    return removeFirst();\n}\n// \u6839\u636eindex\u5220\u9664\npublic E remove(int index) {\n    checkElementIndex(index);\n    return unlink(node(index));\n}\n    \n// \u8fd9\u4e24\u4e2a\u65b9\u6cd5\u4e2dlist\u63a5\u53e3\u4e2d\u6ca1\u6709\uff0c\u662fLinkedList\u7c7b\u4e2d\u7279\u6709\u7684\u3002\npublic E removeFirst() {\n    final Node<E> f = first;\n    if (f == null)\n        throw new NoSuchElementException();\n    return unlinkFirst(f);\n}\n\npublic E removeLast() {\n    final Node<E> l = last;\n    if (l == null)\n        throw new NoSuchElementException();\n    return unlinkLast(l);\n}\n")),(0,l.kt)("h3",{id:"3hashmap"},"3\u3001hashmap"),(0,l.kt)("h4",{id:"1\u521d\u6b65\u4e86\u89e3"},"\uff081\uff09\u521d\u6b65\u4e86\u89e3"),(0,l.kt)("p",null,"hashmap\u7684\u5b9e\u73b0\u662f\u6bd4\u8f83\u590d\u6742\u7684\u3002"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://www.ydlclass.com/doc21xnv/assets/image-20210719104716936-99a370f5.png",alt:"image-20210719104716936"}),"image-20210719104716936"),(0,l.kt)("p",null,"\u5728\u8bfbmap\u6e90\u7801\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u770b\u4e00\u5f20\u56fe\uff0c\u4e86\u89e3hashmap\u7684\u5b58\u50a8\u7ed3\u6784\uff1a"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u7b80\u800c\u8a00\u4e4b\u662f\u8fd9\u6837\u7684\uff08\u4e0d\u592a\u5bf9\uff0c\u4f46\u662f\u6709\u4e2a\u5927\u6982\u7684\u4e86\u89e3\uff09\uff1a")),(0,l.kt)("p",null,"\u7b2c\u4e00\u6b65\uff1ahashmap\u6784\u9020\u65f6\uff08\u5176\u5b9e\u4e0d\u662f\u6784\u9020\u7684\u65f6\u5019\uff09\u4f1a\u521b\u5efa\u4e00\u4e2a\u957f\u5ea6\u4e3a16\u6570\u7ec4\uff0c\u540d\u5b57\u53ebtable\uff0c\u4e5f\u53ebhash\u8868;"),(0,l.kt)("p",null,"\u7b2c\u4e8c\u6b65\uff1ahashmap\u5728\u63d2\u5165\u6570\u636e\u7684\u65f6\u5019\uff0c\u9996\u5148\u6839\u636ekey\u8ba1\u7b97hashcode\uff0c\u7136\u540e\u6839\u636ehashcode\u9009\u62e9\u4e00\u4e2a\u69fd\u4f4d\u3002"),(0,l.kt)("p",null," \u5047\u8bbehashmap\u4f7f\u7528\u53d6\u4f59\u7684\u65b9\u5f0f\u8ba1\u7b97\u3002\uff08\u4e8b\u5b9e\u4e0a\uff0chashmap\u4e0d\u662f\uff09"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"         \u6211\u4eec\u90fd\u77e5\u9053hashcode\u4f1a\u8fd4\u56de\u4e00\u4e2aint\u503c\uff0c\u4f7f\u7528int\u503c\u9664\u4ee516\u53d6\u4f59\u5c31\u80fd\u5f97\u5230\u4e00\u4e2a0~15\u7684\u6570\u5b57\uff0c\u5c31\u80fd\u53bb\u5b9a\u4e00\u4e2a\u5177\u4f53\u7684\u69fd\u4f4d\u3002\n")),(0,l.kt)("p",null,"\u7b2c\u4e09\u6b65\uff1a\u786e\u5b9a\u4e86\u5177\u4f53\u7684\u69fd\u4f4d\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u4f1a\u5c01\u88c5\u4e00\u4e2anode\uff08\u8282\u70b9\uff09\uff0c\u91cc\u8fb9\u4fdd\u5b58\u4e86hash\uff0ckey\uff0cvalue\u7b49\u6570\u636e\u5b58\u5165\u8fd9\u4e2a\u69fd\u4e2d\u3002"),(0,l.kt)("p",null,"\u7b2c\u56db\u6b65\uff1a\u5f53\u5b58\u5165\u65b0\u7684\u6570\u636e\u7684\u65f6\u5019\uff0c\u4f7f\u7528\u65b0\u7684hash\u8ba1\u7b97\u7684\u69fd\u4f4d\u53d1\u73b0\u5df2\u7ecf\u6709\u4e86\u6570\u636e\uff0c\u8fd9\u4e2a\u73b0\u8c61\u53eb\u505ahash\u78b0\u649e\uff0c\u4f1a\u4ee5\u94fe\u8868\u7684\u5f62\u5f0f\u5b58\u50a8\u3002"),(0,l.kt)("p",null,"\u7b2c\u4e94\u6b65\uff1a\u5f53\u94fe\u8868\u7684\u4e2a\u6570\u5230\u8fbe\u4e868\u4e2a\uff0c\u94fe\u8868\u5f00\u59cb\u6811\u5316\uff0c\u53d8\u6210\u4e00\u4e2a\u7ea2\u9ed1\u6811\u3002"),(0,l.kt)("p",null,"\u901a\u8fc7\u8fd9\u4e94\u4e2a\u6b65\u9aa4\uff0c\u5927\u5bb6\u5148\u6709\u4e00\u4e2a\u57fa\u672c\u7684\u4e86\u89e3\uff0c\u66f4\u591a\u7684\u7ec6\u8282\u6211\u4eec\u4e0b\u6765\u770b\u6e90\u7801\u3002"),(0,l.kt)("h4",{id:"2\u6210\u5458\u53d8\u91cf\u7684\u5206\u6790"},"\uff082\uff09\u6210\u5458\u53d8\u91cf\u7684\u5206\u6790"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"// \u9ed8\u8ba4\u5bb9\u91cf\nstatic final int DEFAULT_INITIAL_CAPACITY = 1 << 4; // aka 16\n\n// \u6700\u5927\u5bb9\u91cf\nstatic final int MAXIMUM_CAPACITY = 1 << 30;\n\n// \u9ed8\u8ba4\u7684\u52a0\u8f7d\u56e0\u5b50\nstatic final float DEFAULT_LOAD_FACTOR = 0.75f;\n\n// \u9ed8\u8ba4\u7684\u4e00\u4e2a\u6811\u5316\u7684\u4e00\u4e2a\u9608\u503c \uff08THRESHOLD \u9608\u503c\uff09\nstatic final int TREEIFY_THRESHOLD = 8;\n\n// \u975e\u6811\u5316\u7684\u4e00\u4e2a\u9608\u503c\nstatic final int UNTREEIFY_THRESHOLD = 6;\n\n// \u6811\u5316\u7684\u6700\u5c0f\u5bb9\u91cf\uff0c\u80fd\u770b\u5230\u4e00\u4e9b\u4fe1\u606f\uff0c\u6811\u5316\u9664\u4e86\u94fe\u8868\u957f\u5ea6\uff0c\u5bf9\u5bb9\u91cf\u4e5f\u6709\u8981\u6c42\nstatic final int MIN_TREEIFY_CAPACITY = 64;\n\n// \u5b58\u50a8\u6570\u636e\u7684hash\u8868\uff0c\u5c31\u662f\u4e00\u4e2a\u6570\u7ec4\ntransient Node<K,V>[] table;\n\n// \u771f\u5b9e\u7684\u8d1f\u8f7d\u56e0\u5b50\nfinal float loadFactor;\n")),(0,l.kt)("h4",{id:"3\u6784\u9020"},"\uff083\uff09\u6784\u9020"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'// \u53ea\u662f\u5c06\u9ed8\u8ba4\u7684\u8d1f\u8f7d\u56e0\u5b50\u4f20\u9012\u7ed9\u4e86loadFactor\npublic HashMap() {\n    this.loadFactor = DEFAULT_LOAD_FACTOR; // all other fields defaulted\n}\n\n// \u6709\u4f20\u5165\u7684\u521d\u59cb\u5316\u5bb9\u91cf\npublic HashMap(int initialCapacity) {\n    this(initialCapacity, DEFAULT_LOAD_FACTOR);\n}\n\n// \u6709\u4f20\u5165\u7684\u521d\u59cb\u5316\u5bb9\u91cf\u548c\u8d1f\u8f7d\u56e0\u5b50\npublic HashMap(int initialCapacity, float loadFactor) {\n    if (initialCapacity < 0)\n        throw new IllegalArgumentException("Illegal initial capacity: " +\n                                           initialCapacity);\n    if (initialCapacity > MAXIMUM_CAPACITY)\n        initialCapacity = MAXIMUM_CAPACITY;\n    if (loadFactor <= 0 || Float.isNaN(loadFactor))\n        throw new IllegalArgumentException("Illegal load factor: " +\n                                           loadFactor);\n    // \u8ba1\u7b97\u65b0\u7684\u8d1f\u8f7d\u56e0\u5b50\u548c\u5bb9\u91cf\n    this.loadFactor = loadFactor;\n    this.threshold = tableSizeFor(initialCapacity);\n}  \n\n\n\n/**\n  * \u8fd4\u56de\u4e00\u4e2a\u503c\uff0c\u5927\u4e8e\u7b49\u4e8e\u4f20\u5165\u7684\u6570\u5b57\u7684\u4e00\u4e2a2\u7684\u6b21\u5e42\u7684\u6570\u5b57\uff0c\u4f60\u4f20\u516515\u8fd4\u56de16\uff0c\u4f20\u51657\u8fd4\u56de8\u3001\n  * \u4fdd\u8bc1\u4e86\u5bb9\u91cf\u662f2\u7684\u6b21\u5e42\u3002\u4e3a\u4e86\u540e\u6765\u8ba1\u7b97hash\u69fd\u505a\u51c6\u5907\n  */\nstatic final int tableSizeFor(int cap) {\n    int n = cap - 1;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    return (n < 0) ? 1 : (n >= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + 1;\n}\n\n\nstatic final int tableSizeFor(int cap) {\n    // 00010000 11101001 10001001 10000101  -- > 00010000 11101001 10001001 10000100  283,740,549\n    // \u770b\u5b8c\u4e86\n    int n = cap - 1;\n    // 00010000 11101001 10001001 10000101     n\n    // 00001000 01110100 11000100 11000010     \u53f3\u79fb1\u4f4d\uff0c\u4fdd\u969c2\u4f4d\u662f1\n    // 00011000 11101101 11001101 11000111     n\n    n |= n >>> 1;\n    // 00011000 11101101 11001101 11000111     n\n    // 00000110 00111011 01110011 01110001     \u53f3\u79fb2\u4f4d\uff0c\u4fdd\u969c4\u4f4d\u662f1\n    // 00011110 11111111 11111111 11110111     n\n    n |= n >>> 2;\n    // 00011110 11111111 11111111 11110111     n\n    // 00000001 11101111 11111111 11111111     \u53f3\u79fb4\u4f4d\uff0c\u4fdd\u969c8\u4f4d\u662f1\n    // 00011111 11111111 11111111 11111111     n\n    n |= n >>> 4;\n    // 00011111 11111111 11111111 11111111     n\n    // 00000000 00011111 11111111 11111111     \u53f3\u79fb8\u4f4d\uff0c\u4fdd\u969c16\u4f4d\u662f1\n    // 00011111 11111111 11111111 11111111     n\n    n |= n >>> 8;\n    // 00011111 11111111 11111111 11111111     n\n    // 00000000 00000000 00011111 11111111     \u53f3\u79fb8\u4f4d\uff0c\u4fdd\u969c32\u4f4d\u662f1\n    // 00011111 11111111 11111111 11111111     n\n    n |= n >>> 16;\n    return  n + 1;\n}\n')),(0,l.kt)("p",null,"\u5728\u6784\u9020\u7684\u6574\u4e2a\u8fc7\u7a0b\u5f53\u4e2d\uff0c\u5e76\u6ca1\u6709\u521d\u59cb\u5316hash\u8868table\u3002"),(0,l.kt)("h4",{id:"4put\u65b9\u6cd5"},"\uff084\uff09put\u65b9\u6cd5"),(0,l.kt)("p",null,"\u8fd9\u4e2a\u65b9\u6cd5\u662f\u6838\u5fc3\uff0c\u4e5f\u662f\u6211\u4eec\u6240\u9700\u8981\u7814\u7a76\u7684\u3002\u5f88\u591a\u7684\u95ee\u9898\u90fd\u662f\u5728\u8fd9\u4e2a\u65b9\u6cd5\u5f53\u4e2d\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"public V put(K key, V value) {\n    return putVal(hash(key), key, value, false, true);\n}\n\n// \u7b2c\u4e00\u4e2a\u5173\u952e\u70b9\uff1akey == null\uff0c\u8bf4\u660e\u6211\u4eec\u7684hashmap\u652f\u6301key\u4e3anull\n// \u7b2c\u4e8c\u4e2a\u5173\u952e\u70b9\uff1a (h = key.hashCode()) ^ (h >>> 16) ,\u8fd9\u4e00\u70b9\u5b66\u5b8c\uff0c\u5b66\u5b8cputVal\u65b9\u6cd5\u518d\u770b\n// h          1010 0010 0001 1001 0010 1100 1010 1001\n// h >>> 16   0000 0000 0000 0000 1010 0010 0001 1001 ( 0010 1100 1010 1001)\n// \u5f02\u6216\u8fd0\u7b97     1010 0010 0001 1001 1000 1110 1011 0000 \n// \u76ee\u7684\uff1a \u8ba9\u9ad816\u4f4d\u548c\u4f4e16\u4f4d\u540c\u65f6\u53c2\u4e0e\u8ba1\u7b97\uff0c\u5c06\u6765\u8ba1\u7b97hash\u69fd\u65f6\u66f4\u52a0\u5747\u5300\nstatic final int hash(Object key) {\n    int h;\n    return (key == null) ? 0 : (h = key.hashCode()) ^ (h >>> 16);\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"}," final V putVal(int hash, K key, V value, boolean onlyIfAbsent,\n                   boolean evict) {\n     // tab\u5f88\u660e\u663e\u5c31\u662fhash\u8868\n     Node<K,V>[] tab; \n     // \u5c31\u662f\u4e2a\u5f15\u7528\uff08\u6307\u9488\uff09\uff0c\n     Node<K,V> p; \n     // \u5148\u4e0d\u8981\u7ba1,n\u4ee3\u8868hash\u8868\u7684\u957f\u5ea6\uff08tab\uff09\n     int n, i;\n     // (tab = table) == null \u5c06hash\u8868\u8d4b\u503c\u7ed9tab\uff0c\u5e76\u4e14\u5224\u65ad\u662f\u4e0d\u662fnull\n     // \u6216\u8005\u957f\u5ea6\u7b49\u4e8e0\uff0c\u6211\u5c31\u8981\u6269\u5bb9\uff0c\u6784\u9020\u6ca1\u6709\u521d\u59cb\u5316\n     if ((tab = table) == null || (n = tab.length) == 0){\n         // \u90a3\u5c31\u6269\u5bb9\uff0c\u8fd8\u517c\u4efb\u521d\u59cb\u5316\u7684\u8d23\u4efb\uff0816\uff09\n         n = (tab = resize()).length;\n     }\n     // p == null,\u53ea\u4e0d\u8fc7\u6709\u4e2a\u7ed9p\u8d4b\u503c\u7684\u8fc7\u7a0b\n     // p = tab[i = (n - 1) & hash]\n     // \u5176\u5b9e i\u662f\u8ba1\u7b97\u7684\u69fd\u4f4d\uff0c\u4f60\u7684\u6570\u636e\u5f80\u54ea\u4e2a\u683c\u5b50\u91cc\u653e\n     // (n - 1) & hash \u8fd9\u662f\u771f\u5b9e\u7684\u8ba1\u7b97\u8fc7\u7a0b\uff0cn\u786e\u5b9a\u662f\u4e00\u4e2a2\u7684n\u6b21\u5e42(100..)\uff0chash\u662f\u4e00\u4e2aint\u503c\n     // (n-1)      0000 0000 0000 0000 0000 0000 0000 1111\n     // (hash)     0010 0010 0010 0010 0000 0110 0000 1011\n     // (result)   0000 0000 0000 0000 0000 0000 0000 1011       \n     // \u4e0e\u8fd0\u7b97\u4e4b\u540e\u7684\u7ed3\u679c\u5c31\u662f0~15\uff0c\u6b63\u597d\u8ba1\u7b97\u4e86\u4e00\u4e2a\u69fd\u4f4d\n     // \u7b2c\u4e00\u4e2a\u601d\u8003\u7684\u95ee\u9898\uff1a\u4e3a\u4ec0\u4e48\u5bb9\u91cf\u5fc5\u987b\u662f2\u7684\u6b21\u5e42\uff1f 0...01...1\n     // \u7b2c\u4e8c\u4e2a\u601d\u8003\u7684\u95ee\u9898\uff1a\u4e3a\u4ec0\u4e48\u4f7f\u7528\u4f4d\u79fb\u8fd0\u7b97\u800c\u4e0d\u9002\u7528\u4f59\u8fd0\u7b97\uff1f\u6548\u7387\n     // \u627e\u5230\u69fd\u4f4d\uff0c\u5e76\u4e14\u69fd\u4f4d\u6ca1\u6709\u6570\u636e\uff0c\u5c31\u76f4\u63a5newnode\u653e\u8fdb\u53bb\n     if ((p = tab[i = (n - 1) & hash]) == null){\n         // \u521b\u5efa\u4e86\u4e00\u4e2anode\n         tab[i] = newNode(hash, key, value, null);\n     } else {\n         // \u53ea\u8981\u8fdb\u5165else\uff0c\u8bf4\u660e\u8fd9\u4e2a\u69fd\u4f4d\u6709\u6570\u636e\u4e86\uff0c\u5c31\u8981\u641e\u94fe\u8868\u4e86\n         // \n         Node<K,V> e;\n         // \u952e\uff0c\u6cdb\u578b\uff0c\u5f53\u524d\u63d2\u5165\u6570\u636e\u7684\u952e\n         K k;\n         // \u6839\u636ep = tab[i = (n - 1) & hash]\uff0c\u77e5\u9053p\u662f\u653e\u5728\u69fd\u4f4d\u4e0a\u7684node\n         // p.hash == hash \u8bf4\u660e\u53d1\u751f\u4e86hash\u78b0\u649e\n         // (k = p.key) == key || (key != null && key.equals(k)) \u5224\u65ad\u7684\u662fkey\u91cd\u590d\u4e86\n         if (p.hash == hash &&\n             ((k = p.key) == key || (key != null && key.equals(k)))){\n             // \u8986\u76d6\n             e = p;\n             \n         // \u5224\u65ad\u662f\u4e0d\u662f\u6811\u5f62\u8282\u70b9\n         } else if (p instanceof TreeNode){\n             e = ((TreeNode<K,V>)p).putTreeVal(this, tab, hash, key, value);\n             \n         // \u5426\u5219\u5c31\u662f\u94fe\u8868\u7684\u65b9\u5f0f\n         } else {\n             for (int binCount = 0; ; ++binCount) {\n                 if ((e = p.next) == null) {\n                     // \u8fd9\u4e0d\u5c31\u662f\u94fe\u8868\u5417\uff1f\u5f88\u660e\u663e\u8fd9\u662f\u5c3e\u63d2\n                     p.next = newNode(hash, key, value, null);\n                     if (binCount >= TREEIFY_THRESHOLD - 1) // -1 for 1st\n                         // \u6811\u5316\n                         treeifyBin(tab, hash);\n                     break;\n                 }\n                 // \u5224\u65ad\u94fe\u8868\u4e2d\u6709\u6ca1\u6709key\u4e00\u6837\u7684\uff0c\u8986\u76d6\n                 if (e.hash == hash &&\n                     ((k = e.key) == key || (key != null && key.equals(k))))\n                     break;\n                 p = e;\n             }\n         }\n         if (e != null) { // existing mapping for key\n             V oldValue = e.value;\n             if (!onlyIfAbsent || oldValue == null)\n                 e.value = value;\n             afterNodeAccess(e);\n             return oldValue;\n         }\n     }\n     ++modCount;\n     if (++size > threshold)\n         resize();\n     afterNodeInsertion(evict);\n     return null;\n }\n")),(0,l.kt)("h4",{id:"5\u6269\u5bb9\u7684\u65b9\u6cd5"},"\uff085\uff09\u6269\u5bb9\u7684\u65b9\u6cd5"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'final Node<K,V>[] resize() {\n    Node<K,V>[] oldTab = table;\n    // \u65e7\u7684\u5bb9\u91cf\n    int oldCap = (oldTab == null) ? 0 : oldTab.length;\n    // \u65e7\u7684\u9608\u503c\n    int oldThr = threshold;\n    int newCap, newThr = 0;\n    if (oldCap > 0) {\n        // \u5bb9\u91cf\u5927\u4e8e\u6700\u5927\u503c\u5c31\u53d6\u6700\u5927\u503c\n        if (oldCap >= MAXIMUM_CAPACITY) {\n            threshold = Integer.MAX_VALUE;\n            return oldTab;\n        \n        // \u8fd9\u91cc\u4f53\u73b0\u4e86\u6269\u5bb9\u7684\u5927\u5c0f\n        // newCap = oldCap << 1 \u76f8\u5f53\u4e8e2\u500d\n        } else if ((newCap = oldCap << 1) < MAXIMUM_CAPACITY &&\n                 oldCap >= DEFAULT_INITIAL_CAPACITY)\n            // \u9608\u503c\u6708\u6269\u5bb9\u4e8c\u500d\n            newThr = oldThr << 1; // double threshold\n    // \u65e7\u7684\u9608\u503c\u5927\u4e8e\u96f6\n    } else if (oldThr > 0){ // initial capacity was placed in threshold\n        // \u65e7\u7684\u9608\u503c = \u65b0\u7684\u5bb9\u91cf\n        newCap = oldThr;\n       \n    // \u5426\u5219\u5c31\u662f\u521d\u59cb\u5316\uff0c\u56e0\u4e3a == 0\n    } else {               // zero initial threshold signifies using defaults\n        // \u5426\u5219\u65b0\u7684\u5bb9\u91cf\u5c31\u662f\u9ed8\u8ba4\u7684\u5bb9\u91cf\n        newCap = DEFAULT_INITIAL_CAPACITY;\n        // \u65b0\u7684\u9608\u503c\u5c31\u662f \u5bb9\u91cf*\u8d1f\u8f7d\u56e0\u5b50\n        newThr = (int)(DEFAULT_LOAD_FACTOR * DEFAULT_INITIAL_CAPACITY);\n    }\n    \n    // \u8ba1\u7b97\u65b0\u7684\u9608\u503c\uff0c\u8981\u4e48\u662f\u76f8\u4e58\uff0c\u8981\u4e48Integer\u6700\u5927\u503c\n    if (newThr == 0) {\n        float ft = (float)newCap * loadFactor;\n        newThr = (newCap < MAXIMUM_CAPACITY && ft < (float)MAXIMUM_CAPACITY ?\n                  (int)ft : Integer.MAX_VALUE);\n    }\n    \n    // \u5c06\u8ba1\u7b97\u597d\u7684\u9608\u503c\u8d4b\u503c\u7ed9 threshold\n    threshold = newThr;\n    @SuppressWarnings({"rawtypes","unchecked"})\n    \n    // \u6839\u636e\u65b0\u7684\u5bb9\u91cf\u521b\u5efa\u4e86\u65b0\u7684hash\u8868\n    Node<K,V>[] newTab = (Node<K,V>[])new Node[newCap];\n    table = newTab;\n    // \u4ee5\u4e0b\u662f\u91cd\u65b0\u62f7\u8d1d\u7684\u8fc7\u7a0b\n    if (oldTab != null) {\n        for (int j = 0; j < oldCap; ++j) {\n            Node<K,V> e;\n            if ((e = oldTab[j]) != null) {\n                oldTab[j] = null;\n                if (e.next == null)\n                    newTab[e.hash & (newCap - 1)] = e;\n                else if (e instanceof TreeNode)\n                    ((TreeNode<K,V>)e).split(this, newTab, j, oldCap);\n                else { // preserve order\n                    Node<K,V> loHead = null, loTail = null;\n                    Node<K,V> hiHead = null, hiTail = null;\n                    Node<K,V> next;\n                    do {\n                        next = e.next;\n                        if ((e.hash & oldCap) == 0) {\n                            if (loTail == null)\n                                loHead = e;\n                            else\n                                loTail.next = e;\n                            loTail = e;\n                        }\n                        else {\n                            if (hiTail == null)\n                                hiHead = e;\n                            else\n                                hiTail.next = e;\n                            hiTail = e;\n                        }\n                    } while ((e = next) != null);\n                    if (loTail != null) {\n                        loTail.next = null;\n                        newTab[j] = loHead;\n                    }\n                    if (hiTail != null) {\n                        hiTail.next = null;\n                        newTab[j + oldCap] = hiHead;\n                    }\n                }\n            }\n        }\n    }\n    return newTab;\n}\n')),(0,l.kt)("h4",{id:"6\u6811\u5316\u7684\u90e8\u5206\u4ee3\u7801"},"\uff086\uff09\u6811\u5316\u7684\u90e8\u5206\u4ee3\u7801"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"/**\n  * Replaces all linked nodes in bin at index for given hash unless\n  * table is too small, in which case resizes instead.\n  */\nfinal void treeifyBin(Node<K,V>[] tab, int hash) {\n    int n, index; Node<K,V> e;\n    if (tab == null || (n = tab.length) < MIN_TREEIFY_CAPACITY)\n        // \u4f18\u5148\u6269\u5bb9\n        resize();\n    else if ((e = tab[index = (n - 1) & hash]) != null) {\n        TreeNode<K,V> hd = null, tl = null;\n        do {\n            TreeNode<K,V> p = replacementTreeNode(e, null);\n            if (tl == null)\n                hd = p;\n            else {\n                p.prev = tl;\n                tl.next = p;\n            }\n            tl = p;\n        } while ((e = e.next) != null);\n        if ((tab[index] = hd) != null)\n            hd.treeify(tab);\n    }\n}\n")),(0,l.kt)("p",null,"\u4e3a\u4ec0\u4e48\u9009\u62e9\u6811\u5316\u7684\u957f\u5ea6\u662f8\uff0c\u6cca\u677e\u5206\u5e03"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"}," * 0:    0.60653066\n * 1:    0.30326533\n * 2:    0.07581633\n * 3:    0.01263606\n * 4:    0.00157952\n * 5:    0.00015795\n * 6:    0.00001316\n * 7:    0.00000094\n * 8:    0.00000006\n * more: less than 1 in ten million\n")),(0,l.kt)("p",null,"\u666e\u901a\u8282\u70b9"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"static class Node<K,V> implements Map.Entry<K,V> {\n    final int hash;\n    final K key;\n    V value;\n    Node<K,V> next;\n\n    Node(int hash, K key, V value, Node<K,V> next) {\n        this.hash = hash;\n        this.key = key;\n        this.value = value;\n        this.next = next;\n    }\n}\n")),(0,l.kt)("p",null,"\u6811\u5f62\u8282\u70b9"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"static final class TreeNode<K,V> extends LinkedHashMap.Entry<K,V> {\n    TreeNode<K,V> parent;  // red-black tree links\n    TreeNode<K,V> left;\n    TreeNode<K,V> right;\n    TreeNode<K,V> prev;    // needed to unlink next upon deletion\n    boolean red;\n}\n\nstatic class Entry<K,V> extends HashMap.Node<K,V> {\n    Entry<K,V> before, after;\n    Entry(int hash, K key, V value, Node<K,V> next) {\n        super(hash, key, value, next);\n    }\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u601d\u8003\u9898\uff1a")),(0,l.kt)("p",null,"1\u3001hashmap\u7684key\u7684hash\u600e\u4e48\u8ba1\u7b97\uff1f"),(0,l.kt)("p",null,"2\u3001hashmap\u7684hash\u8868\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f1a\u6269\u5bb9\uff1f"),(0,l.kt)("p",null,"3\u3001hashmap\u4e2d\u4ec0\u4e48\u65f6\u5019\u4f1a\u6811\u5316\uff1f"),(0,l.kt)("p",null,"4\u3001\u4e3a\u4ec0\u4e48\u9009\u62e90.75\u4e3a\u8d1f\u8f7d\u56e0\u5b50\uff0c8\u4e3a\u6811\u5316\u9608\u503c\uff1f"),(0,l.kt)("h3",{id:"4hashset"},"4\u3001hashset"),(0,l.kt)("p",null,"\u53ea\u8981\u7406\u89e3\u4e86hashmap\uff0chashset\u4e0d\u653b\u81ea\u7834\u3002"),(0,l.kt)("p",null,"\uff081\uff09\u9996\u5148\u6211\u4eec\u770b\u5230hashset\u5185\u90e8\u7ef4\u62a4\u4e86\u4e00\u4e2ahashmap\uff0c\u5176\u5b9e\u8bf4\u660e\u4e86hashset\u7684\u5b9e\u73b0\u662f\u57fa\u4e8ehashmap\u7684\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"private transient HashMap<E,Object> map;\n")),(0,l.kt)("p",null,"\uff082\uff09\u6211\u4eec\u770b\u5230hashset\u7684\u6784\u9020\u5668\u5176\u5b9e\u53ea\u662fnew\u4e86\u4e00\u4e2ahashmap();"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"public HashSet() {\n    map = new HashMap<>();\n}\n")),(0,l.kt)("p",null,"\uff083\uff09\u6211\u4eec\u4ee5\u6dfb\u52a0\u4e3a\u4f8b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"private static final Object PRESENT = new Object();\npublic boolean add(E e) {\n    return map.put(e, PRESENT)==null;\n}\n")),(0,l.kt)("h2",{id:"\u56db\u96c6\u5408\u7684\u904d\u5386"},"\u56db\u3001\u96c6\u5408\u7684\u904d\u5386"),(0,l.kt)("h3",{id:"1\u666e\u901afor\u5faa\u73af"},"1\u3001\u666e\u901afor\u5faa\u73af"),(0,l.kt)("p",null,"\u80fd\u591f\u4f7f\u7528\u666e\u901afor\u5faa\u73af\u7684\u524d\u63d0\u662f\u5fc5\u987b\u53ef\u4ee5\u901a\u8fc7\u4e0b\u6807\u83b7\u53d6\u6570\u636e\uff0cList\u5929\u7136\u6ee1\u8db3\u8fd9\u4e2a\u7279\u6027\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'public class ListTest {\n    public static void main(String[] args) {\n        public List<String> names;\n        names = new ArrayList<>();\n        names.add("lucy");\n        names.add("tom");\n        names.add("jerry");\n        for (int i = 0; i < names.size(); i++) {\n            System.out.println(names.get(i));\n        }\n    }\n}\n')),(0,l.kt)("p",null,"\u540c\u7406\uff1a"),(0,l.kt)("p",null,"\u6211\u4eec\u5c06 ",(0,l.kt)("inlineCode",{parentName:"p"},"names = new ArrayList<>();"),"\u6539\u4e3a",(0,l.kt)("inlineCode",{parentName:"p"}," names = new LinkedList<>();"),"\u4e5f\u662f\u53ef\u4ee5\u7684\u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u601d\u8003\u95ee\u9898\uff1a")),(0,l.kt)("p",null,"hashmap\u548chashset\u600e\u4e48\u8fdb\u884c\u904d\u5386\uff1f\u5b83\u4eec\u6ca1\u6709\u4e0b\u6807\u554a\u3002"),(0,l.kt)("p",null,"\u8fd9\u91cc\u5c31\u5fc5\u987b\u4f7f\u7528\u8fed\u4ee3\u5668\u4e86\u3002"),(0,l.kt)("h3",{id:"2\u8fed\u4ee3\u5668"},"2\u3001\u8fed\u4ee3\u5668"),(0,l.kt)("h4",{id:"1\u8fed\u4ee3\u5668\u4ecb\u7ecd"},"\uff081\uff09\u8fed\u4ee3\u5668\u4ecb\u7ecd"),(0,l.kt)("p",null,"\u8fed\u4ee3\u5668\u5176\u5b9e\u662f\u4e00\u79cd\u601d\u60f3\u3002"),(0,l.kt)("p",null,"\u5148\u770b\u4e00\u4e0b\u8fed\u4ee3\u5668\u8fd9\u4e2a\u63a5\u53e3\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'public interface Iterator<E> {\n    // \u662f\u4e0d\u662f\u6709\u4e0b\u4e00\u4e2a\n    boolean hasNext();\n    // \u62ff\u5230\u4e0b\u4e00\u4e2a\n    E next();\n    // \u4f60\u53ef\u4ee5\u7ee7\u627f\u91cd\u5199\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u5426\u5219\u5c06\u629b\u51fa\u5f02\u5e38\n    default void remove() {\n        throw new UnsupportedOperationException("remove");\n    }\n}\n')),(0,l.kt)("p",null,"\u4f8b\u5982\uff1a"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://www.ydlclass.com/doc21xnv/assets/image-20210719151258779-297d3f82.png",alt:"image-20210719151258779"})),(0,l.kt)("p",null,"\u5c0f\u4e3d\u62ff\u4e86\u4e00\u7bee\u5b50\u82f9\u679c\uff0c\u4f60\u60f3\u628a\u5c0f\u4e3d\u7684\u82f9\u679c\u5206\u7ed9\u5927\u5bb6\u5403\u3002"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u6211\uff1a\u5c0f\u4e3d\uff0c\u7bee\u5b50\u91cc\u8fd8\u6709\u5417\uff1f"),(0,l.kt)("li",{parentName:"ul"},"\u5c0f\u4e3d\uff1a \u6709\u5462\u3002 hasNext()"),(0,l.kt)("li",{parentName:"ul"},"\u6211\uff1a\u7ed9\u6211\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5c0f\u4e3d\uff1a\u597d\u5462\u3002 next()"),(0,l.kt)("li",{parentName:"ul"},"\u5c0f\u4e3d\uff1a\u54ce\uff0c\u8fd9\u4e2a\u574f\u4e86\uff0c\u6211\u6254\u4e86\u5427\uff01 remove()")),(0,l.kt)("p",null,"\u5176\u5b9e\u5c0f\u4e3d\u5c31\u662f\u6211\u4eec\u6240\u8bf4\u7684\u8fed\u4ee3\u5668\u3002"),(0,l.kt)("h4",{id:"2\u8fed\u4ee3\u5668\u7684\u4f7f\u7528"},"\uff082\uff09\u8fed\u4ee3\u5668\u7684\u4f7f\u7528"),(0,l.kt)("p",null,"\u8fd8\u662f\u4e0a\u8fb9\u7684\u4f8b\u5b50\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"@Test\npublic void testIterator(){\n    Iterator<String> iterator = names.iterator();\n    // \u6bcf\u6b21\u90fd\u5224\u65ad\u4e00\u4e0b\u662f\u4e0d\u662f\u6709\u4e0b\u4e00\u4e2a\uff0c\u6709\u7684\u8bdd\uff0c\u7ee7\u7eed\u904d\u5386\n    while (iterator.hasNext()){\n        // \u83b7\u53d6\u4e0b\u4e00\u4e2a\n        String name = iterator.next();\n        System.out.println(name);\n    }\n}\n")),(0,l.kt)("p",null,"\u5f53\u7136\u6362\u6210LinkedList\u4e5f\u662f\u53ef\u884c\u7684\u3002"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u770b\u770bhashSet\uff0c\u5c45\u7136\u4e5f\u884c")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * @author itnanls\n * @date 2021/7/16\n **/\npublic class SetTest {\n\n    public Set<String> names;\n\n    @Before\n    public void add() {\n        names = new HashSet<>();\n        names.add("lucy");\n        names.add("tom");\n        names.add("jerry");\n    }\n\n    @Test\n    public void testIterator(){\n        Iterator<String> iterator = names.iterator();\n        // \u6bcf\u6b21\u90fd\u5224\u65ad\u4e00\u4e0b\u662f\u4e0d\u662f\u6709\u4e0b\u4e00\u4e2a\uff0c\u6709\u7684\u8bdd\uff0c\u7ee7\u7eed\u904d\u5386\n        while (iterator.hasNext()){\n            // \u83b7\u53d6\u4e0b\u4e00\u4e2a\n            String name = iterator.next();\n            System.out.println(name);\n        }\n    }\n}\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u518d\u770b\u770bhashmap\uff0c\u4e5f\u662f\u53ef\u4ee5\u7684")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'public class MapTest {\n\n    public Map<String,String> user;\n\n    @Before\n    public void add() {\n        user = new HashMap<>();\n        user.put("username","ydlclass");\n        user.put("password","ydl666888");\n    }\n\n    @Test\n    public void testIterator(){\n        // \u62ff\u5230\u4e00\u4e2a\u5b58\u6709\u6240\u6709entry\u7684set\u96c6\u5408\u3002\n        // entry\u5c31\u662f\u4e00\u4e2a\u4e2a\u7684\u8282\u70b9node\n        Set<Map.Entry<String, String>> entries = user.entrySet();\n        \n        Iterator<Map.Entry<String, String>> iterator = entries.iterator();\n        while (iterator.hasNext()){\n            Map.Entry<String, String> next = iterator.next();\n            System.out.println(next.getKey());\n            System.out.println(next.getValue());\n        }\n    }\n}\n')),(0,l.kt)("p",null,"\u4e5f\u53ef\u4ee5\u5148\u83b7\u53d6\u4e00\u4e2akey\u7684set\u5373\u53ef\uff0c\u518d\u7528\u8fed\u4ee3\u5668\u8fdb\u884c\u904d\u5386\u3002"),(0,l.kt)("p",null,"\u8fd9\u79cd\u65b9\u5f0f\u76f8\u5f53\u4e8e\u904d\u5386\u4e86\u4e24\u6b21\uff0c\u6548\u7387\u4f4e\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"@Test\npublic void testIterator2(){\n    // \u83b7\u53d6\u4e00\u4e2a\u542b\u6709\u6240\u6709key\u7684set\u96c6\u5408\uff0c\u53bb\u8fed\u4ee3\n    Set<String> keys = user.keySet();\n    Iterator<String> iterator = keys.iterator();\n\n    while (iterator.hasNext()){\n        String key = iterator.next();\n        System.out.println(key);\n        System.out.println(user.get(key));\n    }\n}\n")),(0,l.kt)("p",null,"\u5343\u4e07\u522b\u4ee5\u4e3a\u8fed\u4ee3\u5668\u725b\u903c\u7684\u4e0d\u884c\uff0c\u5176\u5b9e\u8fed\u4ee3\u5668\u53ea\u662f\u4e2a\u63a5\u53e3\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u8981\u6709\u5bf9\u5e94\u7684\u5b9e\u73b0\u3002"),(0,l.kt)("p",null,"\u7b80\u5355\u7684\u770b\u4e00\u4e0barraylist\u7684\u5b9e\u73b0"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"private class Itr implements Iterator<E> {\n\n        // \u53ea\u8981\u6709\u6807\u6ca1\u5230\u6700\u540e\u4e00\u4e2a\u5c31\u884c\n        public boolean hasNext() {\n            return cursor != size();\n        }\n\n        public E next() {\n            checkForComodification();\n            try {\n                // \u5927\u6982\u7387\u5c31\u662f\u4f7f\u7528\u6e38\u6807\u63a7\u5236\u4e0b\u4e00\u4e2a\u7684\u4f4d\u7f6e\n                int i = cursor;\n                // \u5176\u5b9e\u5c31\u662f\u8fd4\u56de\u4e86\u4e0b\u4e00\u4e2a\n                E next = get(i);\n                lastRet = i;\n                cursor = i + 1;\n                return next;\n            } catch (IndexOutOfBoundsException e) {\n                checkForComodification();\n                throw new NoSuchElementException();\n            }\n        }\n\n        public void remove() {\n            if (lastRet < 0)\n                throw new IllegalStateException();\n            checkForComodification();\n\n            try {\n                // \u76f4\u63a5\u628a\u5f53\u524d\u7684\u5220\u9664\u5c31\u884c\u4e86\n                AbstractList.this.remove(lastRet);\n                if (lastRet < cursor)\n                    cursor--;\n                lastRet = -1;\n                expectedModCount = modCount;\n            } catch (IndexOutOfBoundsException e) {\n                throw new ConcurrentModificationException();\n            }\n        }\n\n        final void checkForComodification() {\n            if (modCount != expectedModCount)\n                throw new ConcurrentModificationException();\n        }\n    }\n")),(0,l.kt)("h3",{id:"3\u589e\u5f3afor\u5faa\u73af"},"3\u3001\u589e\u5f3afor\u5faa\u73af"),(0,l.kt)("p",null,"Java\u63d0\u4f9b\u4e86\u4e00\u79cd",(0,l.kt)("inlineCode",{parentName:"p"},"\u8bed\u6cd5\u7cd6"),"\uff08\u7528\u8d77\u6765\u751c\u751c\u7684\uff0c\u5f88\u7b80\u5355\uff09\u53bb\u5e2e\u52a9\u6211\u4eec\u904d\u5386\uff0c\u53eb\u589e\u5f3afor\u5faa\u73af\uff1a"),(0,l.kt)("p",null,"List\u3001Set\u90fd\u53ef\u4ee5\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u8fdb\u884c\u904d\u5386\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"@Test\npublic void testEnhancedFor(){\n    for (String name : names){\n        System.out.println(name);\n    }\n}\n")),(0,l.kt)("p",null,"Map\u4f7f\u7528\u8fd9\u6837\u7684\u5199\u6cd5\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"@Test\npublic void testEnhancedFor(){\n    for (Map.Entry<String,String> entry : user.entrySet()){\n        System.out.println(entry.getKey());\n        System.out.println(entry.getValue());\n    }\n}\n")),(0,l.kt)("p",null,"\u589e\u5f3afor\u5faa\u73af\u5176\u5b9e\u4e5f\u662f\u4f7f\u7528\u4e86\u8fed\u4ee3\u5668\u3002\u6211\u4eec\u53ef\u4ee5\u5728ArrayList\u4e2d\u7684\u8fed\u4ee3\u5668\u4e2d\u6253\u4e00\u4e2a\u65ad\u70b9\uff0cdebug\u8fd0\u884c\u4e00\u4e0b\u5373\u53ef\u3002"),(0,l.kt)("p",null,"\u589e\u5f3afor\u5faa\u73af\u53ea\u662f\u4e00\u79cd\u8bed\u6cd5\u7cd6\uff0c\u7528\u8d77\u6765\u751c\u751c\u7684\u7b80\u5355\u800c\u5df2\u3002"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://www.ydlclass.com/doc21xnv/assets/image-20210719145647660-080f986a.png",alt:"image-20210719145647660"}),"image-20210719145647660"),(0,l.kt)("h3",{id:"4\u8fed\u4ee3\u4e2d\u5220\u9664\u5143\u7d20"},"4\u3001\u8fed\u4ee3\u4e2d\u5220\u9664\u5143\u7d20"),(0,l.kt)("p",null,"\u6709\u540c\u4e00\u4e2a\u9898\u76ee\uff1a\u6211\u60f3\u628a\u4e0b\u8fb9\u7684\u96c6\u5408\u4e2d\u7684lucy\u5168\u90e8\u5220\u9664\uff1f"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'public void add() {\n    List<String> names = new ArrayList<>();\n    names.add("tom");\n    names.add("lucy");\n    names.add("lucy");\n    names.add("lucy");\n    names.add("jerry");\n}\n')),(0,l.kt)("h4",{id:"1for\u5faa\u73af\u4e2d\u5220\u9664"},"\uff081\uff09for\u5faa\u73af\u4e2d\u5220\u9664"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'public void testDelByFor(){\n    for (int i = 0; i < names.size(); i++) {\n        if("lucy".equals(names.get(i))){\n            names.remove(i);\n        }\n    }\n    System.out.println(names);\n}\n\n\u7ed3\u679c\uff1a\n[tom, lucy, jerry]\n')),(0,l.kt)("p",null,"\u6211\u4eec\u53d1\u73b0\u5e76\u6ca1\u6709\u5220\u9664\u5e72\u51c0\uff0c\u4e2d\u95f4\u7684lucy\u597d\u50cf\u88ab\u9057\u5fd8\u4e86\u3002"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://www.ydlclass.com/doc21xnv/assets/image-20210719155749879-59e2019e.png",alt:"image-20210719155749879"}),"image-20210719155749879"),(0,l.kt)("p",null,"\u5408\u9002\u7684\u89e3\u51b3\u65b9\u5f0f\u6709\u4e24\u79cd\uff1a"),(0,l.kt)("p",null,"\u7b2c\u4e00\u79cd\uff1a\u56de\u8c03\u6307\u9488"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'for (int i = 0; i < names.size(); i++) {\n    if("lucy".equals(names.get(i))){\n        names.remove(i);\n        // \u56de\u8c03\u6307\u9488\uff1a\n        i--;\n    }\n}\nSystem.out.println(names);\n\n\n\u7ed3\u679c\uff1a\n[tom, jerry]    \n')),(0,l.kt)("p",null,"\u7b2c\u4e8c\u79cd\uff1a\u9006\u5e8f\u904d\u5386"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'for (int i = names.size()-1; i > 0; i--) {\n    if("lucy".equals(names.get(i))){\n        names.remove(i);\n    }\n}\nSystem.out.println(names);\n\n\u7ed3\u679c\uff1a\n[tom, jerry] \n')),(0,l.kt)("p",null,"\u4f46\u662f\u6700\u597d\u7684\u5220\u9664\u65b9\u6cd5\u662f\u4f7f\u7528\u8fed\u4ee3\u5668\u3002"),(0,l.kt)("h4",{id:"2\u4f7f\u7528\u8fed\u4ee3\u5668\u5220\u9664\u5143\u7d20"},"\uff082\uff09\u4f7f\u7528\u8fed\u4ee3\u5668\u5220\u9664\u5143\u7d20"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'public static void main(String[] args){\n    Iterator<String> iterator = names.iterator();\n    while (iterator.hasNext()){\n        // \u8bb0\u4f4fnext(),\u53ea\u80fd\u8c03\u7528\u4e00\u6b21\uff0c\u56e0\u4e3a\u6bcf\u6b21\u8c03\u7528\u90fd\u4f1a\u9009\u62e9\u4e0b\u4e00\u4e2a\n        String name = iterator.next();\n        if("lucy".equals(name)){\n            iterator.remove();\n        }\n    }\n    System.out.println(names);\n}\n')),(0,l.kt)("h2",{id:"\u4e94\u5176\u4ed6\u7684\u96c6\u5408\u7c7b"},"\u4e94\u3001\u5176\u4ed6\u7684\u96c6\u5408\u7c7b"),(0,l.kt)("h3",{id:"1linkedhashmap"},"1\u3001Linkedhashmap"),(0,l.kt)("p",null,"Linkedhashmap\u5728\u539f\u6765\u7684\u57fa\u7840\u4e0a\u7ef4\u62a4\u4e86\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\uff0c\u7528\u6765\u7ef4\u62a4\uff0c\u63d2\u5165\u7684\u987a\u5e8f\u3002"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://www.ydlclass.com/doc21xnv/assets/image-20210719162005725-52d420fb.png",alt:"image-20210719162005725"})),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'public class LinkedHashMapTest {\n\n    public static void main(String[] args){\n        Map<String,String> map = new LinkedHashMap<>(16);\n        map.put("m","abc");\n        map.put("a","abc");\n        map.put("g","bcd");\n        map.put("s","cde");\n        map.put("z","def");\n\n        Iterator<Map.Entry<String, String>> iterator = map.entrySet().iterator();\n        while (iterator.hasNext()){\n            Map.Entry<String, String> next = iterator.next();\n            System.out.println(next.getKey());\n            System.out.println(next.getValue());\n        }\n    }\n}\n\n\u7ed3\u679c\uff1a\u7ed3\u679c\u662f\u6709\u5e8f\u7684\nm\nabc\na\nabc\ng\nbcd\ns\ncde\nz\ndef\n \nMap<String,String> map = new HashMap<>(); \n\u5982\u679c\u6362\u6210hashmap\u7684\u7ed3\u679c\u662f\uff1a\u5f88\u660e\u663e\u65e0\u5e8f    \na\nabc\ns\ncde\ng\nbcd\nz\ndef\nm\nabc   \n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"public LinkedHashMap() {\n    super();\n    accessOrder = false;\n}\n\nstatic class Entry<K,V> extends HashMap.Node<K,V> {\n    Entry<K,V> before, after;\n    Entry(int hash, K key, V value, Node<K,V> next) {\n        super(hash, key, value, next);\n    }\n}\n\ntransient LinkedHashMap.Entry<K,V> head;\n\n/**\n     * The tail (youngest) of the doubly linked list.\n     */\ntransient LinkedHashMap.Entry<K,V> tail;\n")),(0,l.kt)("p",null,"\u5982\u679caccessOrder\u4e3atrue\u7684\u8bdd\uff0c\u5219\u4f1a\u628a\u8bbf\u95ee\u8fc7\u7684\u5143\u7d20\u653e\u5728\u94fe\u8868\u540e\u9762\uff0c\u653e\u7f6e\u987a\u5e8f\u662f\u8bbf\u95ee\u7684\u987a\u5e8f \u5982\u679caccessOrder\u4e3aflase\u7684\u8bdd\uff0c\u5219\u6309\u63d2\u5165\u987a\u5e8f\u6765\u904d\u5386"),(0,l.kt)("p",null,"\u5728Linkedhashmap\u4e2d\u6709\u51e0\u4e2a\u987a\u5e8f\uff0c\u4e00\u4e2a\u662f\u63d2\u5165\u987a\u5e8f\uff0c\u4e00\u4e2a\u662f\u8bbf\u95ee\u987a\u5e8f\u3002"),(0,l.kt)("p",null,"\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528linkedhashmap\u5b9e\u73b0LRU\u7b97\u6cd5\u7684\u7f13\u5b58\uff0c\u6240\u8c13LRU:Least Recently Used,\u6700\u8fd1\u6700\u5c11\u4f7f\u7528,\u5373\u5f53\u7f13\u5b58\u4e86,\u4f1a\u4f18\u5148\u6dd8\u6c70\u90a3\u4e9b\u6700\u8fd1\u4e0d\u5e38\u8bbf\u95ee\u7684\u6570\u636e.\u5373\u51b7\u6570\u636e\u4f18\u5148\u6dd8\u6c70."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"public class LRU<K,V> extends LinkedHashMap<K,V> {\n\n    private int max_capacity;\n\n    public LRU(int initialCapacity,int max_capacity) {\n        super(initialCapacity, 0.75F, true);\n        this.max_capacity = max_capacity;\n    }\n\n    public LRU() {\n        super(16, 0.75F, true);\n        max_capacity = 8;\n    }\n\n    @Override\n    protected boolean removeEldestEntry(Map.Entry<K, V> eldest) {\n        return size() > max_capacity;\n    }\n\n}\n")),(0,l.kt)("h3",{id:"2treemap"},"2\u3001TreeMap"),(0,l.kt)("p",null,"TreeMap\u5e95\u5c42\u5b9e\u73b0\u662f\u7ea2\u9ed1\u6811\uff0c\u6240\u4ee5\u5929\u7136\u652f\u6301\u6392\u5e8f\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"public TreeMap() {\n    comparator = null;\n}\n\npublic TreeMap(Comparator<? super K> comparator) {\n    this.comparator = comparator;\n} \n\n\n\nfinal int compare(Object k1, Object k2) {\n    return comparator==null ? ((Comparable<? super K>)k1).compareTo((K)k2)\n        : comparator.compare((K)k1, (K)k2);\n}\n    \n    \u4f1a\u5427key1\u5f3a\u8f6c\u4e3aComparable\n")),(0,l.kt)("p",null,"\u6211\u4eec\u5c1d\u8bd5\u628a\u4e00\u4e2a\u6ca1\u6709\u5b9e\u73b0Comparable\u7684\u7c7b\u4f20\u5165TreeMap\u4e2d\uff0c\u53d1\u73b0\u4f1a\u629b\u51fa\u5f02\u5e38\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'Map<Dog,String> map = new TreeMap<>();\n\nfor (int i = 0; i < 100; i++) {\n    map.put(new Dog(),"a");\n}\n\n        \nException in thread "main" java.lang.ClassCastException: bb.Dog cannot be cast to java.lang.Comparable\n    at java.util.TreeMap.compare(TreeMap.java:1294)\n    at java.util.TreeMap.put(TreeMap.java:538)\n    at bb.Animal.main(Animal.java:14)\n')),(0,l.kt)("p",null,"\u5df2\u7ecf\u5f88\u660e\u663e\u4e86\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u4e4b\u524d\u5b66\u4e60\u7684\u7b56\u7565\u8bbe\u8ba1\u6a21\u5f0f\u554a\uff0c\u6211\u4eec\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6bd4\u8f83\u5668\uff0c\u5b9e\u73b0key\u7684\u6709\u5e8f\u6027\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'public static void main(String[] args) {\n    Map<Integer,String> map = new TreeMap<>(new Comparator<Integer>() {\n        @Override\n        public int compare(Integer o1, Integer o2) {\n            return o1 - o2;\n        }\n    });\n\n    for (int i = 0; i < 100; i++) {\n        map.put(i,"a");\n    }\n    System.out.println(map);\n\n}\n\n{0=a, 1=a, 2=a, 3=a, 4=a, 5=a, 6=a, 7=a, 8=a, 9=a, 10=a, 11=a, 12=a, 13=a, 14=a, 15=a,\n')),(0,l.kt)("p",null,"\u6211\u4eec\u4fee\u6539\u4e00\u4e2a\u6bd4\u8f83\u5668\uff0c\u7acb\u9a6c\u5c31\u53d1\u751f\u4e86\u53d8\u5316\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"return o2 - o1;\n{99=a, 98=a, 97=a, 96=a, 95=a, 94=a, 93=a, 92=a, 91=a, 90=a, 89=a\n")),(0,l.kt)("p",null,"\u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u8ba9Dog\u7c7b\u5b9e\u73b0Comparable\u63a5\u53e3\u6765\u4f7fDog\u4f5c\u4e3akey\u4f20\u5165Map\u4e2d\u3002"),(0,l.kt)("h3",{id:"3collections"},"3\u3001Collections"),(0,l.kt)("p",null,"Collections\u662f\u4e00\u4e2a\u5de5\u5177\u7c7b\uff0c\u5b83\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5e38\u7528\u7684\u597d\u7528\u7684\u64cd\u4f5c\u96c6\u5408\u7684\u65b9\u6cd5\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'ArrayList<Integer> list = new ArrayList<>();\nlist.add(12);\nlist.add(4);\nlist.add(3);\nlist.add(5);\n//\u5c06\u96c6\u5408\u6309\u7167\u9ed8\u8ba4\u7684\u89c4\u5219\u6392\u5e8f,\u6309\u7167\u6570\u5b57\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u6392\u5e8f\nCollections.sort(list);\nSystem.out.println("list = " + list);\nSystem.out.println("===================");\n//\u5c06\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u53cd\u8f6c\nCollections.reverse(list);\nSystem.out.println("list = " + list);\n//addAll\u65b9\u6cd5\u53ef\u4ee5\u5f80\u96c6\u5408\u4e2d\u6dfb\u52a0\u5143\u7d20\uff0c\u4e5f\u53ef\u5f80\u96c6\u5408\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u96c6\u5408\nCollections.addAll(list,9,20,56);\n//\u6253\u4e71\u96c6\u5408\u4e2d\u7684\u5143\u7d20\nCollections.shuffle(list);\nSystem.out.println("list = " + list);\n \n//Arrays.asList\u65b9\u6cd5\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u957f\u5ea6\u5185\u5bb9\u56fa\u5b9a\u7684List\u96c6\u5408\nList<String> list2 = Arrays.asList("tom", "kobe", "jordan", "tracy","westbook","yaoming","ace","stephen");\n//\u6309\u7167\u5b57\u7b26\u4e32\u9996\u5b57\u7b26\u7684\u5347\u5e8f\u6392\u5217\nCollections.sort(list2);\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u5c0f\u95ee\u9898\uff1a")),(0,l.kt)("p",null,"Arrays.asList(...)\u8fd4\u56de\u7684\u662fArrayList\u5417\uff1f"),(0,l.kt)("h2",{id:"\u516d\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898"},"\u516d\u3001\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898"),(0,l.kt)("h3",{id:"1\u5e76\u53d1\u4fee\u6539\u5f02\u5e38"},"1\u3001\u5e76\u53d1\u4fee\u6539\u5f02\u5e38"),(0,l.kt)("p",null,"\u4f7f\u7528\u589e\u5f3afor\u5faa\u73af\u4e2d\u5220\u9664\u5143\u7d20\u4f1a\u629b\u5f02\u5e38"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'public void testDelByEnhancedFor(){\n    for (String name : names){\n        if("lucy".equals(name)){\n            names.remove(name);\n        }\n    }\n}\n\n\n// \u5e76\u53d1\u4fee\u6539\u5f02\u5e38\njava.util.ConcurrentModificationException\n    at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:909)\n    at java.util.ArrayList$Itr.next(ArrayList.java:859)\n    at com.ydlclass.ListTest.testDelByEnhancedFor(ListTest.java:51)\n    ......\n')),(0,l.kt)("p",null,"\u5176\u5b9e\u4e0d\u4ec5\u4ec5\u662f\u4e0a\u8fb9\u7684\u60c5\u51b5\uff0c\u4e0b\u8fb9\u7684\u60c5\u51b5\u4e5f\u4f1a\u51fa\u73b0\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'public void addDelByEnhancedFor(){\n    for (String name : names){\n        if("lucy".equals(name)){\n            names.add(name);\n        }\n    }\n}\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'public void testDelByIterator(){\n    Iterator<String> iterator = names.iterator();\n    while (iterator.hasNext()){\n        // \u8bb0\u4f4fnext(),\u53ea\u80fd\u8c03\u7528\u4e00\u6b21\uff0c\u56e0\u4e3a\u6bcf\u6b21\u8c03\u7528\u90fd\u4f1a\u9009\u62e9\u4e0b\u4e00\u4e2a\n        String name = iterator.next();\n        if("lucy".equals(name)){\n            names.add("hello");\n        }\n    }\n    System.out.println(names);\n}\n')),(0,l.kt)("p",null,"\u4ea7\u751f\u7684\u539f\u56e0\uff1a"),(0,l.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u628a\u666e\u901a\u7684\u65b9\u6cd5\u548c\u8fed\u4ee3\u5668\u7684\u65b9\u6cd5\u770b\u6210\u4e24\u4e2a\u4eba\uff0c\u4e00\u4e2a\u5c0f\u4e3d\uff0c\u4e00\u4e2a\u5c0f\u7ea2\u3002"),(0,l.kt)("p",null,"\u4f60\u7528\u5c0f\u4e3d\u8fed\u4ee3\u7684\u65f6\u5019\uff0c\u7528\u5c0f\u7ea2\u7684\u65b9\u6cd5\u5220\u9664\uff0c\u6216\u8005\u7528\u5c0f\u7ea2\u7684\u65b9\u6cd5\u8fed\u4ee3\uff0c\u7528\u5c0f\u4e3d\u7684\u65b9\u6cd5\u5220\u9664\u5c31\u4f1a\u51fa\u9519\u3002"),(0,l.kt)("p",null,"\u8fed\u4ee3\u5668\u662f\u4f9d\u8d56\u4e8e\u96c6\u5408\u800c\u5b58\u5728\u7684\uff0c\u5728\u5224\u65ad\u6210\u529f\u540e\uff0c\u96c6\u5408\u7684\u4e2d\u65b0\u6dfb\u52a0\u4e86\u5143\u7d20\uff0c\u800c\u8fed\u4ee3\u5668\u5374\u4e0d\u77e5\u9053\uff0c\u6240\u4ee5\u5c31\u62a5\u9519\u4e86\uff0c\u8fd9\u4e2a\u9519\u53eb\u5e76\u53d1\u4fee\u6539\u5f02\u5e38\u3002"),(0,l.kt)("p",null,"\u5982\u4f55\u89e3\u51b3\u5462?"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u8fed\u4ee3\u5668\u8fed\u4ee3\u5143\u7d20\uff0c\u8fed\u4ee3\u5668\u4fee\u6539\u5143\u7d20\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u96c6\u5408\u904d\u5386\u5143\u7d20\uff0c\u96c6\u5408\u4fee\u6539\u5143\u7d20(\u666e\u901afor)\u3002")),(0,l.kt)("h3",{id:"2\u6570\u636e\u9519\u8bef\u7684\u95ee\u9898"},"2\u3001\u6570\u636e\u9519\u8bef\u7684\u95ee\u9898"),(0,l.kt)("p",null,"\u6211\u4eec\u5b66\u4e86\u5e76\u53d1\u7f16\u7a0b\uff0c\u77e5\u9053\u5f53\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u64cd\u4f5c\u5171\u4eab\u8d44\u6e90\u65f6\u4f1a\u6709\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"  public static void main(String[] args) throws InterruptedException {\n      final ArrayList<Integer> list = new ArrayList<>();\n      CountDownLatch countDownLatch = new CountDownLatch(200);\n      for (int i = 0; i < 200; i++) {\n          new Thread(()->{\n              try {\n                  Thread.sleep(10);\n              } catch (InterruptedException e) {\n                  e.printStackTrace();\n              }\n              list.add(1);\n              countDownLatch.countDown();\n          }).start();\n      }\n      countDownLatch.await();\n      System.out.println(list.size());\n  }\n")),(0,l.kt)("p",null,"\u7b2c\u4e00\u6b21\uff0c\u6211\u4eec\u5c45\u7136\u53d1\u73b0arraylist\u4e5f\u4f1a\u6709\u7a7a\u6307\u9488\uff0c\u76f2\u731c\u5927\u6982\u662f\uff0c\u83b7\u53d6\u5927\u5c0f\u7684\u65f6\u5019\u6ca1\u95ee\u9898\uff0c\u63d2\u5165\u7684\u65f6\u5019\u6709\u4eba\u6377\u8db3\u5148\u767b\uff0c\u4f60\u5c31\u63d2\u4e0d\u8fdb\u53bb\u4e86\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},'Exception in thread "Thread-193" java.lang.ArrayIndexOutOfBoundsException: 163\n    at java.util.ArrayList.add(ArrayList.java:463)\n    at aaa.Test.lambda$main$0(Test.java:21)\n    at java.lang.Thread.run(Thread.java:748)\n')),(0,l.kt)("p",null,"\u7b2c\u4e8c\u6b21"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"195\n")),(0,l.kt)("p",null,"\u90a3\u600e\u4e48\u89e3\u51b3\u7ebf\u7a0b\u5b89\u5168\u7684\u95ee\u9898\u554a\u3002"),(0,l.kt)("p",null,"\u52a0\u9501\uff0c\u5176\u5b9eJDK\u5f00\u59cb\u4e5f\u662f\u8fd9\u6837\u60f3\u7684\uff0c\u4e8e\u662f\u6709\u8fd9\u4e24\u4e2a\u7c7b\u3002"),(0,l.kt)("h3",{id:"3\u52a0\u9501\u89e3\u51b3"},"3\u3001\u52a0\u9501\u89e3\u51b3"),(0,l.kt)("p",null,"HashTable\u548cVector\uff0c\u8fd9\u662f\u4e24\u4e2a\u5f88\u53e4\u8001\u7684\u7c7b"),(0,l.kt)("p",null,"HashTable"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"public class Hashtable<K,V>\n    extends Dictionary<K,V>\n    implements Map<K,V>, Cloneable, java.io.Serializable {\n    \n    public synchronized V get(Object key) {\n        Entry<?,?> tab[] = table;\n        int hash = key.hashCode();\n        int index = (hash & 0x7FFFFFFF) % tab.length;\n        for (Entry<?,?> e = tab[index] ; e != null ; e = e.next) {\n            if ((e.hash == hash) && e.key.equals(key)) {\n                return (V)e.value;\n            }\n        }\n        return null;\n    }    \n}\n")),(0,l.kt)("p",null,"Vector"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"public class Vector<E>\n    extends AbstractList<E>\n    implements List<E>, RandomAccess, Cloneable, java.io.Serializable\n\n\npublic synchronized int size() {\n    return elementCount;\n}\n\n\npublic synchronized boolean add(E e) {\n    modCount++;\n    ensureCapacityHelper(elementCount + 1);\n    elementData[elementCount++] = e;\n    return true;\n}\n\n\n\npublic synchronized boolean removeElement(Object obj) {\n    modCount++;\n    int i = indexOf(obj);\n    if (i >= 0) {\n        removeElementAt(i);\n        return true;\n    }\n    return false;\n}\n")),(0,l.kt)("p",null," \u8fd9\u4e24\u4e2a\u7c7b\uff0c\u5176\u5b9e\u5f88\u4e45\u6ca1\u66f4\u65b0\u4e86\uff0c\u4f46\u662f\u8fd8\u662f\u6709\u9762\u8bd5\u4f1a\u95ee\uff0c\u5176\u5b9e\u8fd9\u4e24\u4e2a\u7c7b\u90fd\u6709\u5386\u53f2\u6e0a\u6e90\uff0c\u6700\u5f00\u59cb\u5c31\u662f\u5728ArrayList\u548cHashMap\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e86Syncronized\uff0c\u4f46\u662f\u540e\u6765ArrayList\u548chashMap\u4e00\u76f4\u5728\u6539\u8fdb\uff0c\u8fd9\u4e24\u4e2a\u5c31\u6210\u4e86\u5386\u53f2\u4e86\uff0c\u53cd\u800c\u73b0\u5728\u95ee\u5b83\u4eec\u7684\u533a\u522b\u5176\u5b9e\u610f\u4e49\u4e0d\u5927\u4e86\u3002"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"HashMap\u548cHashTable\u533a\u522b")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"HashMap\u5141\u8bb8\u5c06 null \u4f5c\u4e3a\u4e00\u4e2a entry \u7684 key \u6216\u8005 value\uff0c\u800c Hashtable \u4e0d\u5141\u8bb8\u3002"),(0,l.kt)("li",{parentName:"ol"},"HashMap \u628a Hashtable \u7684 contains \u65b9\u6cd5\u53bb\u6389\u4e86\uff0c\u6539\u6210 containsValue \u548c containsKey\u3002\u56e0\u4e3a contains \u65b9\u6cd5\u5bb9\u6613\u8ba9\u4eba\u5f15\u8d77\u8bef\u89e3\u3002"),(0,l.kt)("li",{parentName:"ol"},"HashTable \u7ee7\u627f\u81ea Dictionary \u7c7b\uff0c\u800c HashMap \u662f Java1.2 \u5f15\u8fdb\u7684 Map interface \u7684\u4e00\u4e2a\u5b9e\u73b0\u3002"),(0,l.kt)("li",{parentName:"ol"},"HashTable \u7684\u65b9\u6cd5\u662f Synchronized\u4fee\u9970 \u7684\uff0c\u800c HashMap \u4e0d\u662f\uff0c\u8fd9\u4e5f\u662f\u662f\u5426\u80fd\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\u7684\u91cd\u8981\u4fdd\u969c\u3002"),(0,l.kt)("li",{parentName:"ol"},"Hashtable \u548c HashMap \u91c7\u7528\u7684 hash/rehash \u7b97\u6cd5\u90fd\u4e0d\u4e00\u6837\u3002"),(0,l.kt)("li",{parentName:"ol"},"\u83b7\u53d6\u6570\u7ec4\u4e0b\u6807\u7684\u7b97\u6cd5\u4e0d\u540c\uff0c")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"ArrayList\u548cVector\u7684\u533a\u522b")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Vector\u662f\u591a\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u7ebf\u7a0b\u5b89\u5168\u5c31\u662f\u8bf4\u591a\u7ebf\u7a0b\u8bbf\u95ee\u540c\u4e00\u4ee3\u7801\uff0c\u4e0d\u4f1a\u4ea7\u751f\u4e0d\u786e\u5b9a\u7684\u7ed3\u679c\u3002\u800cArrayList\u4e0d\u662f\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u4ece\u6e90\u7801\u4e2d\u770b\u51fa\uff0cVector\u7c7b\u4e2d\u7684\u65b9\u6cd5\u5f88\u591a\uff0c\u6709synchronized\u8fdb\u884c\u4fee\u9970\uff0c\u8fd9\u6837\u5c31\u5bfc\u81f4\u4e86Vector\u5728\u6548\u7387\u4e0a\u65e0\u6cd5\u4e0eArrayList\u76f8\u6bd4\uff1b"),(0,l.kt)("li",{parentName:"ol"},"\u4e24\u4e2a\u90fd\u662f\u91c7\u7528\u7ebf\u6027\u8fde\u7eed\u7a7a\u95f4\u5b58\u50a8\u5143\u7d20\uff0c\u4f46\u662f\u5f53\u7a7a\u95f4\u4e0d\u8db3\u7684\u65f6\u5019\uff0c\u4e24\u4e2a\u7c7b\u7684\u6269\u5bb9\u65b9\u5f0f\u662f\u4e0d\u540c\u7684\u3002"),(0,l.kt)("li",{parentName:"ol"},"Vector\u662f\u4e00\u79cd\u8001\u7684\u52a8\u6001\u6570\u7ec4\uff0c\u662f\u7ebf\u7a0b\u540c\u6b65\u7684\uff0c\u6548\u7387\u5f88\u4f4e\uff0c\u4e00\u822c\u4e0d\u8d5e\u6210\u4f7f\u7528\u3002")),(0,l.kt)("h3",{id:"4\u76ee\u524d\u5e38\u7528\u7684\u7ebf\u7a0b\u5b89\u5168\u96c6\u5408"},"4\u3001\u76ee\u524d\u5e38\u7528\u7684\u7ebf\u7a0b\u5b89\u5168\u96c6\u5408"),(0,l.kt)("h4",{id:"1copyonwritelist"},"\uff081\uff09CopyOnWriteList"),(0,l.kt)("p",null,"\u76ee\u524d\u6211\u4eec\u6709\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848\uff1a"),(0,l.kt)("p",null,"CopyOnWriteList\u7684\u6838\u5fc3\u5c31\u662f\u5199\u5165\u7684\u65f6\u5019\u52a0\u9501\uff0c\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\uff0c\u8bfb\u53d6\u7684\u65f6\u5019\u4e0d\u52a0\u9501\u3002\u4e0d\u662f\u4e00\u80a1\u8111\uff0c\u7ed9\u6240\u6709\u7684\u65b9\u6cd5\u52a0\u9501\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"public boolean add(E e) {\n    final ReentrantLock lock = this.lock;\n    lock.lock();\n    try {\n        // \u590d\u5236\u4e00\u4e2a\u65b0\u7684\u6570\u7ec4\uff0c\u5728\u65b0\u7684\u72ec\u7acb\u7a7a\u95f4\u8fdb\u884c\u6dfb\u52a0\u64cd\u4f5c\n        Object[] elements = getArray();\n        int len = elements.length;\n        Object[] newElements = Arrays.copyOf(elements, len + 1);\n        newElements[len] = e;\n        // \u4fee\u6539\u5f15\u7528\n        setArray(newElements);\n        return true;\n    } finally {\n        lock.unlock();\n    }\n}\n\n\nfinal void setArray(Object[] a) {\n    array = a;\n}\n")),(0,l.kt)("h4",{id:"2concurrenthashmap"},"\uff082\uff09ConcurrentHashMap"),(0,l.kt)("p",null,"1.8\u4e2d\u7684ConcurrentHashMap\u548cHashMap\u7684\u4ee3\u7801\u57fa\u672c\u4e00\u6837\uff0c\u53ea\u4e0d\u8fc7\u5728\u6709\u4e9b\u64cd\u4f5c\u4e0a\u4f7f\u7528\u4e86cas\uff0c\u6709\u4e9b\u5730\u65b9\u52a0\u4e86\u9501\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"public class ConcurrentHashMap<K,V> extends AbstractMap<K,V>\n    implements ConcurrentMap<K,V>, Serializable {\n")),(0,l.kt)("p",null,"\u6784\u9020\u5668\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"public ConcurrentHashMap(int initialCapacity) {\n    if (initialCapacity < 0)\n        throw new IllegalArgumentException();\n    int cap = ((initialCapacity >= (MAXIMUM_CAPACITY >>> 1)) ?\n               MAXIMUM_CAPACITY :\n               tableSizeFor(initialCapacity + (initialCapacity >>> 1) + 1));\n    this.sizeCtl = cap;\n}\n")),(0,l.kt)("p",null,"\u6211\u4eec\u7b80\u5355\u770b\u770bputVal\u7b97\u6cd5"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"final V putVal(K key, V value, boolean onlyIfAbsent) {\n    if (key == null || value == null) throw new NullPointerException();\n    // \u8ba1\u7b97hash\n    int hash = spread(key.hashCode());\n    int binCount = 0;\n    for (Node<K,V>[] tab = table;;) {\n        Node<K,V> f; int n, i, fh;\n        // \u5982\u679c\u6ca1\u6709hash\u8868\uff0c\u5c31\u521b\u5efa\u4e00\u4e2a\n        if (tab == null || (n = tab.length) == 0)\n            tab = initTable();\n        // \u7ed9f\u8d4b\u503c\u5c31\u662fhash\u8868\u4e2d\u7684\u5143\u7d20\n        else if ((f = tabAt(tab, i = (n - 1) & hash)) == null) {\n            // \u8fd9\u91cc\u4e5f\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\n            // \u5982\u679c\u6ca1\u6709\u5c31\u4f7f\u7528cas\u7684\u65b9\u5f0f\u6dfb\u52a0\n            if (casTabAt(tab, i, null,\n                         new Node<K,V>(hash, key, value, null)))\n                break;                   // no lock when adding to empty bin\n        }\n        else if ((fh = f.hash) == MOVED)\n            tab = helpTransfer(tab, f);\n        else {\n            V oldVal = null;\n            // \u770b\u8fd9\u662f\u5173\u952e\uff0c\u8fd9\u52a0\u4e86\u9501\uff0cf\u662f\u4ec0\u4e48\u554a\uff1f\n            // f\u662f\u5934\u8282\u70b9\n            synchronized (f) {\n                if (tabAt(tab, i) == f) {\n                    if (fh >= 0) {\n                        binCount = 1;\n                        for (Node<K,V> e = f;; ++binCount) {\n                            K ek;\n                            if (e.hash == hash &&\n                                ((ek = e.key) == key ||\n                                 (ek != null && key.equals(ek)))) {\n                                oldVal = e.val;\n                                if (!onlyIfAbsent)\n                                    e.val = value;\n                                break;\n                            }\n                            Node<K,V> pred = e;\n                            if ((e = e.next) == null) {\n                                pred.next = new Node<K,V>(hash, key,\n                                                          value, null);\n                                break;\n                            }\n                        }\n                    }\n                    else if (f instanceof TreeBin) {\n                        Node<K,V> p;\n                        binCount = 2;\n                        if ((p = ((TreeBin<K,V>)f).putTreeVal(hash, key,\n                                                              value)) != null) {\n                            oldVal = p.val;\n                            if (!onlyIfAbsent)\n                                p.val = value;\n                        }\n                    }\n                }\n            }\n            if (binCount != 0) {\n                if (binCount >= TREEIFY_THRESHOLD)\n                    treeifyBin(tab, i);\n                if (oldVal != null)\n                    return oldVal;\n                break;\n            }\n        }\n    }\n    addCount(1L, binCount);\n    return null;\n}\n")),(0,l.kt)("p",null,"\u5176\u5b9e\uff0c\u9762\u8bd5\u5f88\u559c\u6b22\u95ee1.7\u548c1.8\u7684\u533a\u522b"),(0,l.kt)("p",null,"\u4e3b\u8981\u662f1.7\u7684\u5206\u6bb5\u9501\u662f\u4e00\u4e2a\u5f88\u7ecf\u5178\u7684\u6848\u4f8b\uff0c\u9020\u6210\u8fd9\u4e2a\u7684\u539f\u56e0\u8fd8\u6709\u4e00\u4e2a\u66f4\u91cd\u8981\u7684\u5c31\u662fJDK1.7\u4f7f\u7528\u7684\u662f\u5934\u63d2\uff0c\u800c1.8\u6539\u6210\u5c3e\u63d2"),(0,l.kt)("p",null,"\u6211\u4eec\u7b80\u5355\u7684\u770b\u4e00\u4e0b1.7\u7684put\u65b9\u6cd5\u5b9e\u73b0\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"public V put(K key, V value) {\n    if (key == null)\n        return putForNullKey(value);\n    int hash = hash(key);\n    int i = indexFor(hash, table.length);\n    // \u627e\u5230\u76f8\u540c\u7684key\uff0c\u8986\u76d6\n    for (Entry<K,V> e = table[i]; e != null; e = e.next) {\n        Object k;\n        if (e.hash == hash && ((k = e.key) == key || key.equals(k))) {\n            V oldValue = e.value;\n            e.value = value;\n            e.recordAccess(this);\n            return oldValue;\n        }\n    }\n\n    modCount++;\n    // \u5426\u5219\u5c31\u662f\u65b0\u589e\n    addEntry(hash, key, value, i);\n    return null;\n}\n\n\nvoid addEntry(int hash, K key, V value, int bucketIndex) {\n    // \u5224\u65ad\u662f\u5426\u9700\u8981\u6269\u5bb9\n    if ((size >= threshold) && (null != table[bucketIndex])) {\n        resize(2 * table.length);\n        hash = (null != key) ? hash(key) : 0;\n        bucketIndex = indexFor(hash, table.length);\n    }\n    // \u521b\u5efa\n    createEntry(hash, key, value, bucketIndex);\n}\n\nvoid createEntry(int hash, K key, V value, int bucketIndex) {\n    Entry<K,V> e = table[bucketIndex];\n    // \u5934\u63d2\u554a\n    table[bucketIndex] = new Entry<>(hash, key, value, e);\n    size++;\n}\n\n// 1.7\u4e2d\u5c45\u7136\u76f4\u63a5\u5c31\u662fEntry\u4e0d\u662fnode\nEntry(int h, K k, V v, Entry<K,V> n) {\n    value = v;\n    next = n;\n    key = k;\n    hash = h;\n}\n    \n")),(0,l.kt)("p",null,"JDK8\u4ee5\u524d\u662f\u5934\u63d2\u6cd5\uff0cJDK8\u540e\u662f\u5c3e\u63d2\u6cd5\uff0c\u90a3\u4e3a\u4ec0\u4e48\u8981\u4ece\u5934\u63d2\u6cd5\u6539\u6210\u5c3e\u63d2\u6cd5\uff1f"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"\u56e0\u4e3a\u5934\u63d2\u6cd5\u4f1a\u9020\u6210\u5faa\u73af\u94fe\u8868"),(0,l.kt)("li",{parentName:"ol"},"JDK7\u7528\u5934\u63d2\u662f\u8003\u8651\u5230\u4e86\u4e00\u4e2a\u6240\u8c13\u7684\u70ed\u70b9\u6570\u636e\u7684\u70b9(\u65b0\u63d2\u5165\u7684\u6570\u636e\u53ef\u80fd\u4f1a\u66f4\u65e9\u7528\u5230)\uff0c\u4f46\u8fd9\u5176\u5b9e\u662f\u4e2a\u4f2a\u547d\u9898,\u56e0\u4e3aJDK7\u4e2drehash\u7684\u65f6\u5019\uff0c\u65e7\u94fe\u8868\u8fc1\u79fb\u65b0\u94fe\u8868\u7684\u65f6\u5019\uff0c\u5982\u679c\u5728\u65b0\u8868\u7684\u6570\u7ec4\u7d22\u5f15\u4f4d\u7f6e\u76f8\u540c\uff0c\u5219\u94fe\u8868\u5143\u7d20\u4f1a\u5012\u7f6e(\u5c31\u662f\u56e0\u4e3a\u5934\u63d2)\uff0c \u6240\u4ee5\u6700\u540e\u7684\u7ed3\u679c \u8fd8\u662f\u6253\u4e71\u4e86\u63d2\u5165\u7684\u987a\u5e8f \uff0c\u6240\u4ee5\u603b\u7684\u6765\u770b\u652f\u6491JDK7\u4f7f\u7528\u5934\u63d2\u7684\u8fd9\u70b9\u539f\u56e0\u4e5f\u4e0d\u8db3\u4ee5\u652f\u6491\u4e0b\u53bb\u4e86 \uff0c\u6240\u4ee5\u5c31\u5e72\u8106\u6362\u6210\u5c3e\u63d2 \u4e00\u4e3e\u591a\u5f97\u3002")),(0,l.kt)("p",null,"1.7\u7684\u52a0\u9501\u5b9e\u73b0"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"/**\n* Mask value for indexing into segments. The upper bits of a\n* key's hash code are used to choose the segment.\n*/\nfinal int segmentMask;\n\n/**\n* Shift value for indexing within segments.\n*/\nfinal int segmentShift;\n\n/**\n* The segments, each of which is a specialized hash table.\n*/\nfinal Segment<K,V>[] segments;\n\ntransient Set<K> keySet;\ntransient Set<Map.Entry<K,V>> entrySet;\ntransient Collection<V> values;\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"static final class Segment<K,V> extends ReentrantLock implements Serializable {\n\n    private static final long serialVersionUID = 2249069246763182397L;\n\n    static final int MAX_SCAN_RETRIES =\n        Runtime.getRuntime().availableProcessors() > 1 ? 64 : 1;\n        \n    // \u6211\u4eec\u9661\u7136\u53d1\u73b0\u6bcf\u4e00\u4e2a\u5206\u6bb5\u91cc\u8fb9\u4fdd\u5b58\u4e86\u4e00\u4e2a\u6570\u7ec4\uff0c\u8fd9\u4e0d\u5c31\u662f\u6570\u7ec4\u5957\u6570\u7ec4\u5417\uff1f\n    transient volatile HashEntry<K,V>[] table;\n\n    transient int count;\n\n    final float loadFactor;\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'@SuppressWarnings("unchecked")\npublic ConcurrentHashMap(int initialCapacity,\n                         float loadFactor, int concurrencyLevel) {\n    if (!(loadFactor > 0) || initialCapacity < 0 || concurrencyLevel <= 0)\n        throw new IllegalArgumentException();\n    if (concurrencyLevel > MAX_SEGMENTS)\n        concurrencyLevel = MAX_SEGMENTS;\n    // Find power-of-two sizes best matching arguments\n    int sshift = 0;\n    int ssize = 1;\n    while (ssize < concurrencyLevel) {\n        ++sshift;\n        ssize <<= 1;\n    }\n    this.segmentShift = 32 - sshift;\n    this.segmentMask = ssize - 1;\n    if (initialCapacity > MAXIMUM_CAPACITY)\n        initialCapacity = MAXIMUM_CAPACITY;\n    int c = initialCapacity / ssize;\n    if (c * ssize < initialCapacity)\n        ++c;\n    int cap = MIN_SEGMENT_TABLE_CAPACITY;\n    while (cap < c)\n        cap <<= 1;\n    // create segments and segments[0]\n    Segment<K,V> s0 =\n        new Segment<K,V>(loadFactor, (int)(cap * loadFactor),\n                         (HashEntry<K,V>[])new HashEntry[cap]);\n    Segment<K,V>[] ss = (Segment<K,V>[])new Segment[ssize];\n    UNSAFE.putOrderedObject(ss, SBASE, s0); // ordered write of segments[0]\n    this.segments = ss;\n}\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"public V put(K key, V value) {\n    Segment<K,V> s;\n    if (value == null)\n        throw new NullPointerException();\n    int hash = hash(key);\n    int j = (hash >>> segmentShift) & segmentMask;\n    if ((s = (Segment<K,V>)UNSAFE.getObject          // nonvolatile; recheck\n         (segments, (j << SSHIFT) + SBASE)) == null) //  in ensureSegment\n        s = ensureSegment(j);\n    return s.put(key, hash, value, false);\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"final V put(K key, int hash, V value, boolean onlyIfAbsent) {\n    // \u5148\u5c1d\u8bd5\u52a0\u9501\uff0c\u52a0\u4e0d\u4e0a\u518d\u75af\u72c2\u52a0\u9501\uff0c\u53cd\u6b63\u80fd\u52a0\u4e0a\u9501\uff0c\u4ed6\u7ee7\u627f\u4e86ReentrantLock\n    HashEntry<K,V> node = tryLock() ? null :\n    scanAndLockForPut(key, hash, value);\n    V oldValue;\n    try {\n        HashEntry<K,V>[] tab = table;\n        int index = (tab.length - 1) & hash;\n        HashEntry<K,V> first = entryAt(tab, index);\n        for (HashEntry<K,V> e = first;;) {\n            if (e != null) {\n                K k;\n                if ((k = e.key) == key ||\n                    (e.hash == hash && key.equals(k))) {\n                    oldValue = e.value;\n                    if (!onlyIfAbsent) {\n                        e.value = value;\n                        ++modCount;\n                    }\n                    break;\n                }\n                e = e.next;\n            }\n            else {\n                if (node != null)\n                    node.setNext(first);\n                else\n                    node = new HashEntry<K,V>(hash, key, value, first);\n                int c = count + 1;\n                if (c > threshold && tab.length < MAXIMUM_CAPACITY)\n                    rehash(node);\n                else\n                    setEntryAt(tab, index, node);\n                ++modCount;\n                count = c;\n                oldValue = null;\n                break;\n            }\n        }\n    } finally {\n        unlock();\n    }\n    return oldValue;\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"private HashEntry<K,V> scanAndLockForPut(K key, int hash, V value) {\n    HashEntry<K,V> first = entryForHash(this, hash);\n    HashEntry<K,V> e = first;\n    HashEntry<K,V> node = null;\n    int retries = -1; // negative while locating node\n    // \u4e0d\u5b9a\u7684\u91cd\u65b0\u62a2\u9501\uff0c\u62a2\u9501\u7684\u8fc7\u7a0b\u5f53\u4e2d\u5b8c\u6210\u5f88\u591a\u521d\u59cb\u5316\u7684\u5de5\u4f5c\n    \n    while (!tryLock()) {\n        HashEntry<K,V> f; // to recheck first below\n        // \u7b2c\u4e00\u6b21\u518d\u6b21\u62a2\u9501\u65f6\u987a\u4fbf\u521d\u59cb\u5316\u4e86entry\n        if (retries < 0) {\n            if (e == null) {\n                if (node == null) // speculatively create node\n                    node = new HashEntry<K,V>(hash, key, value, null);\n                retries = 0;\n            }\n            // \u53d1\u73b0\u91cd\u590d\u7684key\u5c31\u4e0d\u7528\u521d\u8bc6\u5316entry\u4e86\n            else if (key.equals(e.key))\n                retries = 0;\n            else\n                e = e.next;\n        }\n        // \u5982\u679c\u8d85\u8fc7\u6700\u5927\u7684\u62a2\u9501\u7684\u6b21\u6570\u76f4\u63a5\u8c03\u7528lock\n        else if (++retries > MAX_SCAN_RETRIES) {\n            lock();\n            break;\n        }\n        else if ((retries & 1) == 0 &&\n                 (f = entryForHash(this, hash)) != first) {\n            e = first = f; // re-traverse if entry changed\n            retries = -1;\n        }\n    }\n    return node;\n}\n")),(0,l.kt)("h3",{id:"5guava\u63d0\u4f9b\u7684\u4e0d\u53ef\u53d8\u96c6\u5408"},"5\u3001guava\u63d0\u4f9b\u7684\u4e0d\u53ef\u53d8\u96c6\u5408"),(0,l.kt)("h1",{id:""}),(0,l.kt)("h2",{id:"\u4e03junit\u5355\u5143\u6d4b\u8bd5"},"\u4e03\u3001JUnit\u5355\u5143\u6d4b\u8bd5"),(0,l.kt)("h3",{id:"1junit-\u5165\u95e8"},"1\u3001JUnit \u5165\u95e8"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"JUnit \u662f\u4e00\u4e2a Java \u7f16\u7a0b\u8bed\u8a00\u7684\u5355\u5143\u6d4b\u8bd5\u6846\u67b6\u3002JUnit \u5728\u6d4b\u8bd5\u9a71\u52a8\u7684\u5f00\u53d1\u65b9\u9762\u6709\u5f88\u91cd\u8981\u7684\u53d1\u5c55\uff0c\u662f\u8d77\u6e90\u4e8e JUnit \u7684\u4e00\u4e2a\u7edf\u79f0\u4e3a xUnit \u7684\u5355\u5143\u6d4b\u8bd5\u6846\u67b6\u4e4b\u4e00\u3002")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"JUnit\u7684\u597d\u5904\uff1a")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"\u53ef\u4ee5\u4e66\u5199\u4e00\u7cfb\u5217\u7684\u6d4b\u8bd5\u65b9\u6cd5\uff0c\u5bf9\u9879\u76ee\u6240\u6709\u7684\u63a5\u53e3\u6216\u8005\u65b9\u6cd5\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\u3002"),(0,l.kt)("li",{parentName:"ol"},"\u542f\u52a8\u540e\uff0c\u81ea\u52a8\u5316\u6d4b\u8bd5\uff0c\u5e76\u5224\u65ad\u6267\u884c\u7ed3\u679c, \u4e0d\u9700\u8981\u4eba\u4e3a\u7684\u5e72\u9884\u3002"),(0,l.kt)("li",{parentName:"ol"},"\u53ea\u9700\u8981\u67e5\u770b\u6700\u540e\u7ed3\u679c\uff0c\u5c31\u77e5\u9053\u6574\u4e2a\u9879\u76ee\u7684\u65b9\u6cd5\u63a5\u53e3\u662f\u5426\u901a\u7545\u3002"),(0,l.kt)("li",{parentName:"ol"},"\u6bcf\u4e2a\u5355\u5143\u6d4b\u8bd5\u7528\u4f8b\u76f8\u5bf9\u72ec\u7acb\uff0c\u7531Junit \u542f\u52a8\uff0c\u81ea\u52a8\u8c03\u7528\u3002\u4e0d\u9700\u8981\u6dfb\u52a0\u989d\u5916\u7684\u8c03\u7528\u8bed\u53e5\u3002"),(0,l.kt)("li",{parentName:"ol"},"\u6dfb\u52a0\uff0c\u5220\u9664\uff0c\u5c4f\u853d\u6d4b\u8bd5\u65b9\u6cd5\uff0c\u4e0d\u5f71\u54cd\u5176\u4ed6\u7684\u6d4b\u8bd5\u65b9\u6cd5\u3002 \u5f00\u6e90\u6846\u67b6\u90fd\u5bf9JUnit \u6709\u76f8\u5e94\u7684\u652f\u6301\u3002")),(0,l.kt)("p",null,"JUnit\u5176\u5b9e\u5c31\u662f\u4e00\u4e2ajar\u5305\uff0cidea\u4e2d\u53ef\u4ee5\u901a\u8fc7\u81ea\u52a8\u4fee\u590d\u529f\u80fd\u76f4\u63a5\u6dfb\u52a0\u3002\u4f46\u662f\u4e3a\u4e86\u6f14\u793a\u6e05\u695a\uff0c\u6211\u4eec\u8fd8\u662f\u5b89\u88c5\u89c4\u77e9\u5f15\u5165jar\u5305\u5b8c\u6210\u3002"),(0,l.kt)("p",null,"\u4f7f\u7528JUnit\u6211\u4eec\u9700\u8981\u5f15\u5165\u4e0b\u8fb9\u4e24\u4e2ajar\u5305\u5373\u53ef\uff1a"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"hamcrest-core-1.1.jar"),(0,l.kt)("li",{parentName:"ol"},"junit-4.12.jar")),(0,l.kt)("p",null,"\u7f51\u7ad9\u6709\u63d0\u4f9b\u3002"),(0,l.kt)("p",null,"\u52a0\u5165JUnit\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u6d4b\u8bd5\u7c7b\uff0c\u6d4b\u8bd5\u65b9\u6cd5\uff0c\u6bcf\u4e00\u4e2a\u6d4b\u8bd5\u65b9\u6cd5\u90fd\u53ef\u4ee5\u72ec\u7acb\u8fd0\u884c\uff1a"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://www.ydlclass.com/doc21xnv/assets/image-20210908231431143-be5f4d93.png",alt:"image-20210908231431143"}),"image-20210908231431143"),(0,l.kt)("h3",{id:"2junit-\u65ad\u8a00"},"2\u3001JUnit \u65ad\u8a00"),(0,l.kt)("p",null,"Junit\u6240\u6709\u7684\u65ad\u8a00\u90fd\u5305\u542b\u5728 Assert \u7c7b\u4e2d\u3002"),(0,l.kt)("p",null,"\u8fd9\u4e2a\u7c7b\u63d0\u4f9b\u4e86\u5f88\u591a\u6709\u7528\u7684\u65ad\u8a00\u65b9\u6cd5\u6765\u7f16\u5199\u6d4b\u8bd5\u7528\u4f8b\u3002\u53ea\u6709\u5931\u8d25\u7684\u65ad\u8a00\u624d\u4f1a\u88ab\u8bb0\u5f55\u3002Assert \u7c7b\u4e2d\u7684\u4e00\u4e9b\u6709\u7528\u7684\u65b9\u6cd5\u5217\u5f0f\u5982\u4e0b\uff1a"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"void assertEquals(boolean expected, boolean actual)"),":\u68c0\u67e5\u4e24\u4e2a\u53d8\u91cf\u6216\u8005\u7b49\u5f0f\u662f\u5426\u5e73\u8861"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"void assertTrue(boolean expected, boolean actual)"),":\u68c0\u67e5\u6761\u4ef6\u4e3a\u771f"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"void assertFalse(boolean condition)"),":\u68c0\u67e5\u6761\u4ef6\u4e3a\u5047"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"void assertNotNull(Object object)"),":\u68c0\u67e5\u5bf9\u8c61\u4e0d\u4e3a\u7a7a"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"void assertNull(Object object)"),":\u68c0\u67e5\u5bf9\u8c61\u4e3a\u7a7a"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"void assertSame(boolean condition)"),":assertSame() \u65b9\u6cd5\u68c0\u67e5\u4e24\u4e2a\u76f8\u5173\u5bf9\u8c61\u662f\u5426\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"void assertNotSame(boolean condition)"),":assertNotSame() \u65b9\u6cd5\u68c0\u67e5\u4e24\u4e2a\u76f8\u5173\u5bf9\u8c61\u662f\u5426\u4e0d\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"void assertArrayEquals(expectedArray, resultArray)"),":assertArrayEquals() \u65b9\u6cd5\u68c0\u67e5\u4e24\u4e2a\u6570\u7ec4\u662f\u5426\u76f8\u7b49")),(0,l.kt)("p",null,"\u65ad\u8a00\u4e0d\u6210\u529f\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u4f1a\u6709\u7ea2\u8272\u7684\u8fdb\u5ea6\u6761\uff0c\u65ad\u8a00\u80fd\u591f\u5e2e\u52a9\u6211\u4eec\u5f88\u597d\u7684\u9884\u5224\u7ed3\u679c\uff0c\u5373\u4f7f\u7a0b\u5e8f\u6b63\u5e38\u8fd0\u884c\u4f46\u662f\u7ed3\u679c\u4e0d\u6b63\u786e\uff0c\u4e5f\u4f1a\u4ee5\u5931\u8d25\u7ed3\u675f\u3002"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://www.ydlclass.com/doc21xnv/assets/image-20210908232010018-a0098cc0.png",alt:"image-20210908232010018"}),"image-20210908232010018"),(0,l.kt)("h3",{id:"3junit-\u6ce8\u89e3"},"3\u3001JUnit \u6ce8\u89e3"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"@Test"),":\u8fd9\u4e2a\u6ce8\u91ca\u8bf4\u660e\u4f9d\u9644\u5728 JUnit \u7684 public void \u65b9\u6cd5\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u6d4b\u8bd5\u6848\u4f8b\u3002"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"@Before"),":\u6709\u4e9b\u6d4b\u8bd5\u5728\u8fd0\u884c\u524d\u9700\u8981\u521b\u9020\u51e0\u4e2a\u76f8\u4f3c\u7684\u5bf9\u8c61\u3002\u5728 public void \u65b9\u6cd5\u52a0\u8be5\u6ce8\u91ca\u662f\u56e0\u4e3a\u8be5\u65b9\u6cd5\u9700\u8981\u5728 test \u65b9\u6cd5\u524d\u8fd0\u884c\u3002"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"@After"),":\u5982\u679c\u4f60\u5c06\u5916\u90e8\u8d44\u6e90\u5728 Before \u65b9\u6cd5\u4e2d\u5206\u914d\uff0c\u90a3\u4e48\u4f60\u9700\u8981\u5728\u6d4b\u8bd5\u8fd0\u884c\u540e\u91ca\u653e\u4ed6\u4eec\u3002\u5728 public void \u65b9\u6cd5\u52a0\u8be5\u6ce8\u91ca\u662f\u56e0\u4e3a\u8be5\u65b9\u6cd5\u9700\u8981\u5728 test \u65b9\u6cd5\u540e\u8fd0\u884c\u3002")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'public class JunitTest {\n\n    @Before\n    public void before(){\n        System.out.println("before junit!");\n    }\n\n    @Test\n    public void print(){\n        System.out.println("hello junit!");\n    }\n\n    @After\n    public void after(){\n        System.out.println("after junit!");\n    }\n}\n')),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://www.ydlclass.com/doc21xnv/assets/image-20210908232303482-5262fc76.png",alt:"image-20210908232303482"}),"image-20210908232303482"),(0,l.kt)("h3",{id:"4\u547d\u540d\u89c4\u8303"},"4\u3001\u547d\u540d\u89c4\u8303"),(0,l.kt)("p",null,"\u5355\u5143\u6d4b\u8bd5\u7c7b\u7684\u547d\u540d\u89c4\u8303\u4e3a\uff1a\u88ab\u6d4b\u8bd5\u7c7b\u7684\u7c7b\u540d+Test\u3002."),(0,l.kt)("p",null,"\u5355\u5143\u6d4b\u8bd5\u7c7b\u4e2d\u6d4b\u8bd5\u65b9\u6cd5\u7684\u547d\u540d\u89c4\u8303\u4e3a\uff1atest+\u88ab\u6d4b\u8bd5\u65b9\u6cd5\u7684\u65b9\u6cd5\u540d+AAA\uff0c\u5176\u4e2dAAA\u4e3a\u5bf9\u540c\u4e00\u4e2a\u65b9\u6cd5\u7684\u4e0d\u540c\u7684\u5355\u5143\u6d4b\u8bd5\u7528\u4f8b\u7684\u81ea\u5b9a\u4e49\u540d\u79f0\u3002."),(0,l.kt)("h2",{id:"\u516d\u6027\u80fd\u5bf9\u6bd4"},"\u516d\u3001\u6027\u80fd\u5bf9\u6bd4"),(0,l.kt)("h3",{id:"1hashtable\u548cconcurrenthashmap"},"1\u3001Hashtable\u548cConcurrentHashMap"),(0,l.kt)("p",null,"\u6211\u4eec\u5c1d\u8bd5\u5f00\u8f9f50\u4e2a\u7ebf\u7a0b\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u5411\u96c6\u5408\u4e2dput100000\u4e2a\u5143\u7d20\uff0c\u6d4b\u8bd5\u4e24\u4e2a\u7c7b\u6240\u9700\u8981\u7684\u65f6\u95f4\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'@Test\npublic void hashtableTest() throws InterruptedException {\n    final Map<Integer,Integer> map = new Hashtable<>(500000);\n    final CountDownLatch countDownLatch = new CountDownLatch(50);\n    System.out.println("----------------\u5f00\u59cb\u6d4b\u8bd5Hashtable------------------");\n    long start = System.currentTimeMillis();\n    for (int i = 0; i < 50; i++) {\n        final int j = i;\n        new Thread(()->{\n            for (int k = 0; k < 100000; k++) {\n                map.put(j*k,1);\n            }\n            countDownLatch.countDown();\n        }).start();\n    }\n    countDownLatch.await();\n    long end = System.currentTimeMillis();\n    System.out.println("hashtable:(end-start) = " + (end - start));\n\n    // ----------------\u5f00\u59cb\u6d4b\u8bd5ConcurrentHashMap------------------\n    System.out.println("----------------\u5f00\u59cb\u6d4b\u8bd5ConcurrentHashMap------------------");\n    final Map map2 = new ConcurrentHashMap<>(500000);\n    final CountDownLatch countDownLatch2 = new CountDownLatch(50);\n    start = System.currentTimeMillis();\n    for (int i = 0; i < 50; i++) {\n        final int j = i;\n        new Thread(()->{\n            for (int k = 0; k < 100000; k++) {\n                map2.put(j*k,1);\n            }\n            countDownLatch2.countDown();\n        }).start();\n    }\n    countDownLatch.await();\n    end = System.currentTimeMillis();\n    System.out.println("ConcurrentHashMap:(end-start) = " + (end - start));\n}\n')),(0,l.kt)("p",null,"\u5f97\u5230\u7684\u7ed3\u679c\uff1a\u6027\u80fd\u771f\u7684\u5dee\u8ddd\u5f88\u5927"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"----------------\u5f00\u59cb\u6d4b\u8bd5Hashtable------------------\nhashtable:(end-start) = 777\n----------------\u5f00\u59cb\u6d4b\u8bd5ConcurrentHashMap------------------\nConcurrentHashMap:(end-start) = 2\n")),(0,l.kt)("h3",{id:"2arraylist\u548clinkedlist"},"2\u3001arraylist\u548clinkedlist"),(0,l.kt)("h4",{id:"1\u987a\u5e8f\u6dfb\u52a0"},"\uff081\uff09\u987a\u5e8f\u6dfb\u52a0"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'@Test\npublic void testArrayListAdd(){\n    List<Integer> list = new ArrayList<>();\n    Long start = System.currentTimeMillis();\n    for (int i = 0; i < 10000000; i++) {\n        list.add((int)(Math.random()*100));\n    }\n    Long end = System.currentTimeMillis();\n    System.out.printf("\u7528\u65f6%d\u6beb\u79d2\u3002",end-start);\n}\n\u7ed3\u679c\uff1a\n    \u7528\u65f6243\u6beb\u79d2\u3002\n\n@Test\npublic void testLinkedListAdd(){\n    List<Integer> list = new LinkedList<>();\n    Long start = System.currentTimeMillis();\n    for (int i = 0; i < 10000000; i++) {\n        list.add((int)(Math.random()*100));\n    }\n    Long end = System.currentTimeMillis();\n    System.out.printf("\u7528\u65f6%d\u6beb\u79d2\u3002",end-start);\n}\n\u7ed3\u679c\uff1a\n    \u7528\u65f62524\u6beb\u79d2\u3002\n')),(0,l.kt)("h4",{id:"2\u4f7f\u7528for\u5faa\u73af\u8fed\u4ee3\u83b7\u53d6"},"\uff082\uff09\u4f7f\u7528for\u5faa\u73af\u8fed\u4ee3\u83b7\u53d6"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'@Test\npublic void testArrayListFor(){\n    List<Integer> list = new ArrayList<>();\n    for (int i = 0; i < 10000000; i++) {\n        list.add((int)(Math.random()*100));\n    }\n    System.out.println("\u5f00\u59cb------");\n    Long start = System.currentTimeMillis();\n    for (int i = 0; i < list.size(); i++) {\n        list.get(i);\n    }\n    Long end = System.currentTimeMillis();\n    System.out.printf("\u7528\u65f6%d\u6beb\u79d2\u3002",end-start);\n}\n\u7ed3\u679c\uff1a\n    \u7528\u65f62\u6beb\u79d2\u3002\n\n@Test\npublic void testLinkedListFor(){\n    List<Integer> list = new LinkedList<>();\n    for (int i = 0; i < 10000000; i++) {\n        list.add((int)(Math.random()*100));\n    }\n    System.out.println("\u5f00\u59cb------");\n    Long start = System.currentTimeMillis();\n    for (int i = 0; i < list.size(); i++) {\n        list.get(i);\n    }\n    Long end = System.currentTimeMillis();\n    System.out.printf("\u7528\u65f6%d\u6beb\u79d2\u3002",end-start);\n}\n\u7ed3\u679c\uff1a\n    \u65e0\u6cd5\u8ba1\u7b97\u65f6\u95f4\u3002\n')),(0,l.kt)("h4",{id:"3\u4f7f\u7528\u8fed\u4ee3\u5668\u8fed\u4ee3\u83b7\u53d6"},"\uff083\uff09\u4f7f\u7528\u8fed\u4ee3\u5668\u8fed\u4ee3\u83b7\u53d6"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'@Test\npublic void testArrayListIterator(){\n    List<Integer> list = new ArrayList<>();\n    for (int i = 0; i < 10000000; i++) {\n        list.add((int)(Math.random()*100));\n    }\n    System.out.println("\u5f00\u59cb------");\n    Long start = System.currentTimeMillis();\n    Iterator<Integer> iterator = list.iterator();\n    while (iterator.hasNext()){\n        iterator.next();\n    }\n    Long end = System.currentTimeMillis();\n    System.out.printf("\u7528\u65f6%d\u6beb\u79d2\u3002",end-start);\n}\n\u7ed3\u679c\uff1a\n    \u5f00\u59cb------\n    \u7528\u65f64\u6beb\u79d2\u3002\n\n@Test\npublic void testLinkedListIterator(){\n    List<Integer> list = new LinkedList<>();\n    for (int i = 0; i < 10000000; i++) {\n        list.add((int)(Math.random()*100));\n    }\n    System.out.println("\u5f00\u59cb------");\n    Long start = System.currentTimeMillis();\n    Iterator<Integer> iterator = list.iterator();\n    while (iterator.hasNext()){\n        iterator.next();\n    }\n    Long end = System.currentTimeMillis();\n    System.out.printf("\u7528\u65f6%d\u6beb\u79d2\u3002",end-start);\n}\n\n\u7ed3\u679c\uff1a\n    \u5f00\u59cb------\n    \u7528\u65f642\u6beb\u79d2\u3002\n')),(0,l.kt)("h4",{id:"4\u5934\u63d2"},"\uff084\uff09\u5934\u63d2"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'@Test\npublic void testArrayListAddHeader(){\n    List<Integer> list = new ArrayList<>();\n    Long start = System.currentTimeMillis();\n    for (int i = 0; i < 10000000; i++) {\n        list.add(0,(int)(Math.random()*100));\n    }\n    Long end = System.currentTimeMillis();\n    System.out.printf("\u7528\u65f6%d\u6beb\u79d2\u3002",end-start);\n}\n\u7ed3\u679c\uff1a\n    \u65e0\u6cd5\u7b97\u51fa\uff0c\u592a\u6162\n\n@Test\npublic void testLinkedListAddHeader(){\n    List<Integer> list = new LinkedList<>();\n    Long start = System.currentTimeMillis();\n    for (int i = 0; i < 10000000; i++) {\n        list.add(0,(int)(Math.random()*100));\n    }\n    Long end = System.currentTimeMillis();\n    System.out.printf("\u7528\u65f6%d\u6beb\u79d2\u3002",end-start);\n}\n\u7ed3\u679c\uff1a\n    \u7528\u65f62487\u6beb\u79d2\u3002\n')),(0,l.kt)("h4",{id:"5\u968f\u673a\u5220\u9664"},"\uff085\uff09\u968f\u673a\u5220\u9664"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'@Test\npublic void testLinkedListDel(){\n    List<Integer> list = new LinkedList<>();\n    for (int i = 0; i < 10000000; i++) {\n        list.add(0,(int)(Math.random()*100));\n    }\n    Long start = System.currentTimeMillis();\n    // \u4e0d\u7528\u7ba1\u4e3a\u5565\uff0c\u8fd9\u5c31\u662f\u6392\u5e8f\uff0c\u590d\u5236\u8fc7\u6765\u7528\u5c31\u884c\uff0c\u5199\u4e2a\u5192\u6ce1\u4e5f\u884c\n    Iterator<Integer> iterator = list.iterator();\n    while (iterator.hasNext()){\n        if(iterator.next()>5000000){\n            iterator.remove();\n        }\n    }\n    Long end = System.currentTimeMillis();\n    System.out.printf("\u7528\u65f6%d\u6beb\u79d2\u3002",end-start);\n}\n\u7ed3\u679c\uff1a\n    \u7528\u65f645\u6beb\u79d2\u3002\n\n@Test\npublic void testArrayListDel(){\n    List<Integer> list = new ArrayList<>();\n    for (int i = 0; i < 10000000; i++) {\n        list.add(0,(int)(Math.random()*100));\n    }\n    Long start = System.currentTimeMillis();\n    // \u4e0d\u7528\u7ba1\u4e3a\u5565\uff0c\u8fd9\u5c31\u662f\u6392\u5e8f\uff0c\u590d\u5236\u8fc7\u6765\u7528\u5c31\u884c\uff0c\u5199\u4e2a\u5192\u6ce1\u4e5f\u884c\n    Iterator<Integer> iterator = list.iterator();\n    while (iterator.hasNext()){\n        if(iterator.next()>5000000){\n            iterator.remove();\n        }\n    }\n    Long end = System.currentTimeMillis();\n    System.out.printf("\u7528\u65f6%d\u6beb\u79d2\u3002",end-start);\n}\n\u7ed3\u679c\uff1a\n    \u592a\u6162\uff0c\u65f6\u95f4\u6ca1\u51fa\u6765\n')),(0,l.kt)("h4",{id:"6\u81ea\u5e26\u7684\u6392\u5e8f\u65b9\u6cd5"},"\uff086\uff09\u81ea\u5e26\u7684\u6392\u5e8f\u65b9\u6cd5"),(0,l.kt)("p",null,"\u6392\u5e8f\u6bd4\u8f83\u8017\u8d39\u8d44\u6e90\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u91cf\u7ea7\u8c03\u6574\u5230\u4e86\u5341\u4e07\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'@Test\npublic void testArrayListSort(){\n    List<Integer> list = new ArrayList<>();\n    for (int i = 0; i < 100000; i++) {\n        list.add(0,(int)(Math.random()*100));\n    }\n    Long start = System.currentTimeMillis();\n    // \u4e0d\u7528\u7ba1\u4e3a\u5565\uff0c\u8fd9\u5c31\u662f\u6392\u5e8f\uff0c\u590d\u5236\u8fc7\u6765\u7528\u5c31\u884c\uff0c\u5199\u4e2a\u5192\u6ce1\u4e5f\u884c\n    list.sort(Comparator.comparingInt(num -> num));\n    Long end = System.currentTimeMillis();\n    System.out.printf("\u7528\u65f6%d\u6beb\u79d2\u3002",end-start);\n}\n\u7ed3\u679c\uff1a\n    \u7528\u65f649\u6beb\u79d2\u3002\n\n@Test\npublic void testLinkedListSort(){\n    List<Integer> list = new LinkedList<>();\n    for (int i = 0; i < 100000; i++) {\n        list.add(0,(int)(Math.random()*100));\n    }\n    Long start = System.currentTimeMillis();\n    // \u4e0d\u7528\u7ba1\u4e3a\u5565\uff0c\u8fd9\u5c31\u662f\u6392\u5e8f\uff0c\u590d\u5236\u8fc7\u6765\u7528\u5c31\u884c\uff0c\u5199\u4e2a\u5192\u6ce1\u4e5f\u884c\n    list.sort(Comparator.comparingInt(num -> num));\n    Long end = System.currentTimeMillis();\n    System.out.printf("\u7528\u65f6%d\u6beb\u79d2\u3002",end-start);\n}\n\n\u7ed3\u679c\uff1a\n    \u7528\u65f653\u6beb\u79d2\u3002\n')),(0,l.kt)("h4",{id:"7\u601d\u8003"},"\uff087\uff09\u601d\u8003"),(0,l.kt)("p",null,"\u5176\u5b9e\u6211\u4eec\u5b66\u4e60\u65f6\uff0c\u603b\u662f\u53bb\u80cc\u8bf5\u6982\u5ff5\uff1a"),(0,l.kt)("p",null,"\u6570\u7ec4\u67e5\u8be2\u5feb\uff0c\u63d2\u5165\u6162\u3002\u94fe\u8868\u63d2\u5165\u6162\uff0c\u67e5\u8be2\u5feb\u3002"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4f46\u662f\u7ecf\u8fc7\u6d4b\u8bd5\uff0c\u5c3e\u63d2\u53cd\u800c\u662f\u6570\u7ec4\u5feb\uff0c\u800c\u5c3e\u63d2\u7684\u4f7f\u7528\u573a\u666f\u6781\u591a\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6d4b\u8bd5\u4e86\u5404\u79cd\u8fed\u4ee3\uff0c\u904d\u5386\u65b9\u6cd5\uff0cArrayList\u57fa\u672c\u90fd\u662f\u6bd4LinkedList\u8981\u5feb\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u968f\u673a\u63d2\u5165\uff0c\u94fe\u8868\u4f1a\u5feb\u5f88\u591a\uff0c\u786e\u5b9e\u6709\u4e00\u4e9b\u7279\u6b8a\u7684\u573a\u666fLinkedList\u66f4\u5408\u9002\uff0c\u6bd4\u5982\u4ee5\u540e\u6211\u4eec\u5b66\u7684\u8fc7\u6ee4\u5668\u94fe\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u968f\u673a\u5220\u9664\uff0c\u94fe\u8868\u7684\u6548\u7387\u4e5f\u662f\u65e0\u6bd4\u4f18\u4e8e\u6570\u7ec4\uff0c\u5982\u679c\u6211\u4eec\u5b58\u5728\u9700\u8981\u8fc7\u6ee4\u5220\u9664\u5927\u91cf\u968f\u673a\u5143\u7d20\u7684\u573a\u666f\u4e5f\u80fd\u4f7f\u7528linkedlist\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6211\u4eec\u5de5\u4f5c\u4e2d\u7684\u4f7f\u7528\u8fd8\u662f\u4ee5ArrayList\u4e3a\u4e3b\uff0c\u56e0\u4e3a\u5b83\u7684\u4f7f\u7528\u573a\u666f\u6700\u591a\u3002")),(0,l.kt)("h2",{id:"\u4e03java8\u7279\u6027"},"\u4e03\u3001Java8\u7279\u6027"),(0,l.kt)("h3",{id:"1\u63a5\u53e3\u9ed8\u8ba4\u65b9\u6cd5"},"1\u3001\u63a5\u53e3\u9ed8\u8ba4\u65b9\u6cd5"),(0,l.kt)("p",null," \u5728JDK8\u4e4b\u524d\uff0c\u63a5\u53e3\u4e0d\u80fd\u5b9a\u4e49\u4efb\u4f55\u5b9e\u73b0\uff0c\u8fd9\u610f\u5473\u7740\u4e4b\u524d\u6240\u6709\u7684JAVA\u7248\u672c\u4e2d\uff0c\u63a5\u53e3\u5236\u5b9a\u7684\u65b9\u6cd5\u662f\u62bd\u8c61\u7684\uff0c\u4e0d\u5305\u542b\u65b9\u6cd5\u4f53\u3002\u4eceJKD8\u5f00\u59cb\uff0c\u6dfb\u52a0\u4e86\u4e00\u79cd\u65b0\u529f\u80fd-\u9ed8\u8ba4\u65b9\u6cd5\u3002\u9ed8\u8ba4\u65b9\u6cd5\u5141\u8bb8\u63a5\u53e3\u65b9\u6cd5\u5b9a\u4e49\u9ed8\u8ba4\u5b9e\u73b0\uff0c\u800c\u6240\u6709\u5b50\u7c7b\u90fd\u5c06\u62e5\u6709\u8be5\u65b9\u6cd5\u53ca\u5b9e\u73b0\u3002"),(0,l.kt)("p",null," \u9ed8\u8ba4\u65b9\u6cd5\u7684\u4e3b\u8981\u4f18\u52bf\u662f\u63d0\u4f9b\u4e00\u79cd\u62d3\u5c55\u63a5\u53e3\u7684\u65b9\u6cd5\uff0c\u800c\u4e0d\u7834\u574f\u73b0\u6709\u4ee3\u7801\u3002\u5047\u5982\u6211\u4eec\u6709\u4e00\u4e2a\u5df2\u7ecf\u6295\u5165\u4f7f\u7528\u63a5\u53e3\uff0c\u9700\u8981\u62d3\u5c55\u4e00\u4e2a\u65b0\u7684\u65b9\u6cd5\uff0c\u5728JDK8\u4ee5\u524d\uff0c\u5982\u679c\u4e3a\u4e00\u4e2a\u4f7f\u7528\u7684\u63a5\u53e3\u589e\u52a0\u4e00\u4e2a\u65b0\u65b9\u6cd5\uff0c\u5219\u6211\u4eec\u5fc5\u987b\u5728\u6240\u6709\u5b9e\u73b0\u7c7b\u4e2d\u6dfb\u52a0\u8be5\u65b9\u6cd5\u7684\u5b9e\u73b0\uff0c\u5426\u5219\u7f16\u8bd1\u4f1a\u51fa\u73b0\u5f02\u5e38\u3002\u5982\u679c\u5b9e\u73b0\u7c7b\u6570\u91cf\u5c11\u5e76\u4e14\u6211\u4eec\u6709\u6743\u9650\u4fee\u6539\uff0c\u53ef\u80fd\u4f1a\u5de5\u4f5c\u91cf\u76f8\u5bf9\u8f83\u5c11\u3002\u5982\u679c\u5b9e\u73b0\u7c7b\u6bd4\u8f83\u591a\u6216\u8005\u6211\u4eec\u6ca1\u6709\u6743\u9650\u4fee\u6539\u5b9e\u73b0\u7c7b\u6e90\u4ee3\u7801\uff0c\u8fd9\u6837\u53ef\u80fd\u5c31\u6bd4\u8f83\u9ebb\u70e6\u3002\u800c\u9ed8\u8ba4\u65b9\u6cd5\u5219\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5b9e\u73b0\uff0c\u5f53\u6ca1\u6709\u663e\u793a\u63d0\u4f9b\u5176\u4ed6\u5b9e\u73b0\u65f6\u5c31\u91c7\u7528\u8fd9\u4e2a\u5b9e\u73b0\u3002\u8fd9\u6837\u65b0\u6dfb\u52a0\u7684\u65b9\u6cd5\u5c06\u4e0d\u4f1a\u7834\u574f\u73b0\u6709\u4ee3\u7801\u3002"),(0,l.kt)("h3",{id:"2\u51fd\u6570\u5f0f\u63a5\u53e3"},"2\u3001\u51fd\u6570\u5f0f\u63a5\u53e3"),(0,l.kt)("p",null," \u51fd\u6570\u5f0f\u63a5\u53e3\u5728Java\u4e2d\u662f\u6307\uff1a\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5\u7684\u63a5\u53e3"),(0,l.kt)("p",null," \u51fd\u6570\u5f0f\u63a5\u53e3\uff0c\u5373\u9002\u7528\u4e8e\u51fd\u6570\u5f0f\u7f16\u7a0b\u573a\u666f\u7684\u63a5\u53e3\u3002\u800cJava\u4e2d\u7684\u51fd\u6570\u5f0f\u7f16\u7a0b\u4f53\u73b0\u5c31\u662fLambda\uff0c\u6240\u4ee5\u51fd\u6570\u5f0f\u63a5\u53e3\u5c31\u662f\u53ef\u4ee5\u9002\u7528\u4e8eLambda\u4f7f\u7528\u7684\u63a5\u53e3\u3002\u53ea\u6709\u786e\u4fdd\u63a5\u53e3\u4e2d\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5\uff0cJava\u4e2d\u7684Lambda\u624d\u80fd\u987a\u5229\u5730\u8fdb\u884c\u63a8\u5bfc\u3002"),(0,l.kt)("p",null,"\u63a5\u4e0b\u6765\u7ed9\u5927\u5bb6\u4ecb\u7ecd\u51e0\u4e2a\u5e38\u7528\u7684\u51fd\u6570\u5f0f\u63a5\u53e3\uff0c\u5728\u6211\u4eec\u63a5\u4e0b\u6765\u8981\u5b66\u4e60\u7684Lamdba\u8868\u8fbe\u5f0f\u4e2d\u5927\u91cf\u4f7f\u7528\u3002"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u6d88\u8d39\u8005\uff0c\u6d88\u8d39\u6570\u636e")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"@FunctionalInterface\npublic interface Consumer<T> {\n    void accept(T t);\n}\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u4f9b\u5e94\u5546\uff0c\u7ed9\u6211\u4eec\u4ea7\u751f\u6570\u636e")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"@FunctionalInterface\npublic interface Supplier<T> {\n    T get();\n}\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u65ad\u8a00\uff0c\u5224\u65ad\u4f20\u5165\u7684t\u662f\u4e0d\u662f\u6ee1\u8db3\u6761\u4ef6")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"@FunctionalInterface\npublic interface Predicate<T> {\n\n    boolean test(T t);\n}\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u51fd\u6570\uff0c\u5c31\u662f\u5c06\u4e00\u4e2a\u6570\u636e\u8f6c\u5316\u6210\u53e6\u4e00\u4e2a\u6570\u636e")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"@FunctionalInterface\npublic interface Function<T, R> {\n    R apply(T t);\n}\n")),(0,l.kt)("p",null," \u6211\u4eec\u5728\u601d\u8003\u4e0a\u8fb9\u7684\u4ee3\u7801\u7684\u65f6\u5019\uff0c\u4e0d\u8981\u80e1\u601d\u4e71\u60f3\uff0c\u5b83\u4eec\u5c31\u662f\u4e00\u7ec4\u63a5\u53e3\uff0c\u548c\u6211\u4eec\u7684\u666e\u901a\u63a5\u53e3\u4e00\u6837\uff0c\u6bcf\u4e2a\u63a5\u53e3\u4ee3\u8868\u4e00\u79cd\u80fd\u529b\uff0c\u9700\u8981\u5b50\u7c7b\u53bb\u5b9e\u73b0\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u51fd\u6570\u5f0f\u63a5\u53e3\uff0c\u6240\u4ee5\u533f\u540d\u5185\u90e8\u7c7b\u90fd\u53ef\u4ee5\u5199\u6210\u7bad\u5934\u51fd\u6570\u7684\u5f62\u5f0f\u3002"),(0,l.kt)("h3",{id:"3optional"},"3\u3001Optional"),(0,l.kt)("h4",{id:"1\u7b80\u4ecb"},"\uff081\uff09\u7b80\u4ecb"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"     Optional\u7c7b\u662fJava8\u4e3a\u4e86\u89e3\u51b3null\u503c\u5224\u65ad\u95ee\u9898\uff0c\u501f\u9274google guava\u7c7b\u5e93\u7684Optional\u7c7b\u800c\u5f15\u5165\u7684\u4e00\u4e2a\u540c\u540dOptional\u7c7b\uff0c\u4f7f\u7528Optional\u7c7b\u53ef\u4ee5\u907f\u514d\u663e\u5f0f\u7684null\u503c\u5224\u65ad\uff08null\u7684\u9632\u5fa1\u6027\u68c0\u67e5\uff09\uff0c\u907f\u514dnull\u5bfc\u81f4\u7684NPE\uff08NullPointerException\uff09\u3002\n")),(0,l.kt)("h4",{id:"2optional\u5bf9\u8c61\u7684\u521b\u5efa"},"\uff082\uff09Optional\u5bf9\u8c61\u7684\u521b\u5efa"),(0,l.kt)("p",null,"Optional\u7c7b\u63d0\u4f9b\u4e86\u4e09\u4e2a\u9759\u6001\u65b9\u6cd5empty()\u3001of(T value)\u3001ofNullable(T value)\u6765\u521b\u5efaOptinal\u5bf9\u8c61\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-dart"},'// 1\u3001\u521b\u5efa\u4e00\u4e2a\u5305\u88c5\u5bf9\u8c61\u503c\u4e3a\u7a7a\u7684Optional\u5bf9\u8c61\nOptional<String> optStr = Optional.empty();\n// 2\u3001\u521b\u5efa\u5305\u88c5\u5bf9\u8c61\u503c\u975e\u7a7a\u7684Optional\u5bf9\u8c61\nOptional<String> optStr1 = Optional.of("optional");\n// 3\u3001\u521b\u5efa\u5305\u88c5\u5bf9\u8c61\u503c\u5141\u8bb8\u4e3a\u7a7a\u7684Optional\u5bf9\u8c61\nOptional<String> optStr2 = Optional.ofNullable(null);\n')),(0,l.kt)("h4",{id:"3optional-\u7c7b\u5178\u578b\u63a5\u53e3\u7684\u4f7f\u7528"},"\uff083\uff09Optional \u7c7b\u5178\u578b\u63a5\u53e3\u7684\u4f7f\u7528"),(0,l.kt)("p",null,"\u4e0b\u9762\u4ee5\u4e00\u4e9b\u5178\u578b\u573a\u666f\u4e3a\u4f8b\uff0c\u5217\u51faOptional API\u5e38\u7528\u63a5\u53e3\u7684\u7528\u6cd5\uff0c\u5e76\u9644\u4e0a\u76f8\u5e94\u4ee3\u7801\u3002"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"get()\u65b9\u6cd5")),(0,l.kt)("p",null,"\u7b80\u5355\u770b\u4e0bget()\u65b9\u6cd5\u7684\u6e90\u7801\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},'public T get() {\n    if (value == null) {\n        throw new NoSuchElementException("No value present");\n    }\n    return value;\n}\n')),(0,l.kt)("p",null,"\u53ef\u4ee5\u770b\u5230\uff0cget()\u65b9\u6cd5\u4e3b\u8981\u7528\u4e8e\u8fd4\u56de\u5305\u88c5\u5bf9\u8c61\u7684\u5b9e\u9645\u503c\uff0c\u4f46\u662f\u5982\u679c\u5305\u88c5\u5bf9\u8c61\u503c\u4e3anull\uff0c\u4f1a\u629b\u51faNoSuchElementException\u5f02\u5e38\u3002"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"isPresent()\u65b9\u6cd5")),(0,l.kt)("p",null,"isPresent()\u65b9\u6cd5\u7684\u6e90\u7801\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public boolean isPresent() {\n    return value != null;\n}\n")),(0,l.kt)("p",null,"\u53ef\u4ee5\u770b\u5230\uff0cisPresent()\u65b9\u6cd5\u7528\u4e8e\u5224\u65ad\u5305\u88c5\u5bf9\u8c61\u7684\u503c\u662f\u5426\u975e\u7a7a\u3002\u4e0b\u9762\u6211\u4eec\u6765\u770b\u4e00\u6bb5\u7cdf\u7cd5\u7684\u4ee3\u7801\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},'public static String getGender(Student student){\n    Optional<Student> stuOpt =  Optional.ofNullable(student);\n    if(stuOpt.isPresent())\n    {\n        return stuOpt.get().getGender();\n    }\n\n    return "Unkown";\n}\n')),(0,l.kt)("p",null,"\u8fd9\u6bb5\u4ee3\u7801\u5b9e\u73b0\u7684\u662f\u7b2c\u4e00\u7ae0(\u7b80\u4ecb)\u4e2d\u7684\u903b\u8f91\uff0c\u4f46\u662f",(0,l.kt)("strong",{parentName:"p"},"\u8fd9\u79cd\u7528\u6cd5\u4e0d\u4f46\u6ca1\u6709\u51cf\u5c11null\u7684\u9632\u5fa1\u6027\u68c0\u67e5\uff0c\u800c\u4e14\u589e\u52a0\u4e86Optional\u5305\u88c5\u7684\u8fc7\u7a0b\uff0c\u8fdd\u80cc\u4e86Optional\u8bbe\u8ba1\u7684\u521d\u8877\uff0c\u56e0\u6b64\u5f00\u53d1\u4e2d\u8981\u907f\u514d\u8fd9\u79cd\u7cdf\u7cd5\u7684\u4f7f\u7528")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"ifPresent()\u65b9\u6cd5")),(0,l.kt)("p",null,"ifPresent()\u65b9\u6cd5\u7684\u6e90\u7801\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public void ifPresent(Consumer<? super T> consumer) {\n    if (value != null)\n        consumer.accept(value);\n}\n")),(0,l.kt)("p",null,"ifPresent()\u65b9\u6cd5\u63a5\u53d7\u4e00\u4e2aConsumer\u5bf9\u8c61\uff08\u6d88\u8d39\u51fd\u6570\uff09\uff0c\u5982\u679c\u5305\u88c5\u5bf9\u8c61\u7684\u503c\u975e\u7a7a\uff0c\u8fd0\u884cConsumer\u5bf9\u8c61\u7684accept()\u65b9\u6cd5\u3002\u793a\u4f8b\u5982\u4e0b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},'public static void printName(Student student){\n    Optional.ofNullable(student).ifPresent(u ->  System.out.println("The student name is : " + u.getName()));\n}\n')),(0,l.kt)("p",null,"\u4e0a\u8ff0\u793a\u4f8b\u7528\u4e8e\u6253\u5370\u5b66\u751f\u59d3\u540d\uff0c\u7531\u4e8eifPresent()\u65b9\u6cd5\u5185\u90e8\u505a\u4e86null\u503c\u68c0\u67e5\uff0c\u8c03\u7528\u524d\u65e0\u9700\u62c5\u5fc3NPE\u95ee\u9898\u3002"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"orElse()\u65b9\u6cd5")),(0,l.kt)("p",null,"orElse()\u65b9\u6cd5\u7684\u6e90\u7801\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public T orElse(T other) {\n    return value != null ? value : other;\n}\n")),(0,l.kt)("p",null,"orElse()\u65b9\u6cd5\u529f\u80fd\u6bd4\u8f83\u7b80\u5355\uff0c\u5373\u5982\u679c\u5305\u88c5\u5bf9\u8c61\u503c\u975e\u7a7a\uff0c\u8fd4\u56de\u5305\u88c5\u5bf9\u8c61\u503c\uff0c\u5426\u5219\u8fd4\u56de\u5165\u53c2other\u7684\u503c\uff08\u9ed8\u8ba4\u503c\uff09\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'public static String getGender(Student student){\n    return Optional.ofNullable(student).map(u -> u.getGender()).orElse("Unkown");\n}\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"orElseGet()\u65b9\u6cd5")),(0,l.kt)("p",null,"orElseGet()\u65b9\u6cd5\u7684\u6e90\u7801\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"    public T orElseGet(Supplier<? extends T> other) {\n        return value != null ? value : other.get();\n    }\n")),(0,l.kt)("p",null,"orElseGet()\u65b9\u6cd5\u4e0eorElse()\u65b9\u6cd5\u7c7b\u4f3c\uff0c\u533a\u522b\u5728\u4e8eorElseGet()\u65b9\u6cd5\u7684\u5165\u53c2\u4e3a\u4e00\u4e2aSupplier\u5bf9\u8c61\uff0c\u7528Supplier\u5bf9\u8c61\u7684get()\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u4f5c\u4e3a\u9ed8\u8ba4\u503c\u3002\u5982\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'    public static String getGender(Student student)\n    {\n        return Optional.ofNullable(student).map(u -> u.getGender()).orElseGet(() -> "Unkown");      \n    }\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"orElseThrow()\u65b9\u6cd5")),(0,l.kt)("p",null,"orElseThrow()\u65b9\u6cd5\u7684\u6e90\u7801\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public <X extends Throwable> T orElseThrow(Supplier<? extends X> exceptionSupplier) throws X {\n    if (value != null) {\n        return value;\n    } else {\n        throw exceptionSupplier.get();\n    }\n}\n")),(0,l.kt)("p",null," orElseThrow()\u65b9\u6cd5\u5176\u5b9e\u4e0eorElseGet()\u65b9\u6cd5\u975e\u5e38\u76f8\u4f3c\u4e86\uff0c\u5165\u53c2\u90fd\u662fSupplier\u5bf9\u8c61\uff0c\u53ea\u4e0d\u8fc7orElseThrow()\u7684Supplier\u5bf9\u8c61\u5fc5\u987b\u8fd4\u56de\u4e00\u4e2aThrowable\u5f02\u5e38\uff0c\u5e76\u5728orElseThrow()\u4e2d\u5c06\u5f02\u5e38\u629b\u51fa\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'public static String getGender1(Student student){\n    return Optional.ofNullable(student).map(u -> u.getGender()).orElseThrow(() -> new RuntimeException("Unkown"));      \n}\n')),(0,l.kt)("p",null,"orElseThrow()\u65b9\u6cd5\u9002\u7528\u4e8e\u5305\u88c5\u5bf9\u8c61\u503c\u4e3a\u7a7a\u65f6\u9700\u8981\u629b\u51fa\u7279\u5b9a\u5f02\u5e38\u7684\u573a\u666f\u3002"),(0,l.kt)("h2",{id:"\u516bstream\u7f16\u7a0b"},"\u516b\u3001Stream\u7f16\u7a0b"),(0,l.kt)("p",null," Java8\u4e2d\u7684Stream\u662f\u5bf9\u5bb9\u5668\u5bf9\u8c61\u529f\u80fd\u7684\u589e\u5f3a\uff0c\u5b83\u4e13\u6ce8\u4e8e\u5bf9\u5bb9\u5668\u5bf9\u8c61\u8fdb\u884c\u5404\u79cd\u975e\u5e38\u4fbf\u5229\u3001\u9ad8\u6548\u7684 \u805a\u5408\u64cd\u4f5c\uff08aggregate operation\uff09\uff0c\u6216\u8005\u5927\u6279\u91cf\u6570\u636e\u64cd\u4f5c (bulk data operation)\u3002Stream API\u501f\u52a9\u4e8e\u540c\u6837\u65b0\u51fa\u73b0\u7684Lambda\u8868\u8fbe\u5f0f\uff0c\u6781\u5927\u7684\u63d0\u9ad8\u7f16\u7a0b\u6548\u7387\u548c\u7a0b\u5e8f\u53ef\u8bfb\u6027\u3002\u540c\u65f6\uff0c\u5b83\u63d0\u4f9b\u4e32\u884c\u548c\u5e76\u884c\u4e24\u79cd\u6a21\u5f0f\u8fdb\u884c\u6c47\u805a\u64cd\u4f5c\uff0c\u5e76\u53d1\u6a21\u5f0f\u80fd\u591f\u5145\u5206\u5229\u7528\u591a\u6838\u5904\u7406\u5668\u7684\u4f18\u52bf\u3002\u901a\u5e38\uff0c\u7f16\u5199\u5e76\u884c\u4ee3\u7801\u5f88\u96be\u800c\u4e14\u5bb9\u6613\u51fa\u9519, \u4f46\u4f7f\u7528Stream API\u65e0\u9700\u7f16\u5199\u4e00\u884c\u591a\u7ebf\u7a0b\u7684\u4ee3\u7801\uff0c\u5c31\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u5199\u51fa\u9ad8\u6027\u80fd\u7684\u5e76\u53d1\u7a0b\u5e8f\u3002"),(0,l.kt)("p",null," \u6211\u89c9\u5f97\u6211\u4eec\u53ef\u4ee5\u5c06\u6d41\u770b\u505a\u6d41\u6c34\u7ebf\uff0c\u8fd9\u4e2a\u6d41\u6c34\u7ebf\u662f\u5904\u7406\u6570\u636e\u7684\u6d41\u6c34\u7ebf\uff0c\u4e00\u4e2a\u4ea7\u54c1\u7ecf\u8fc7\u6d41\u6c34\u7ebf\u4f1a\u6709\u4e00\u9053\u9053\u7684\u5de5\u5e8f\u5c31\u5982\u540c\u5bf9\u6570\u636e\u7684\u4e2d\u95f4\u64cd\u4f5c\uff0c\u6bd4\u5982\u8fc7\u6ee4\u6211\u4e0d\u9700\u8981\u7684\uff0c\u7ed9\u6570\u636e\u6392\u5e8f\u80fd\uff0c\u6700\u540e\u7684\u7ec8\u6b62\u64cd\u4f5c\u5c31\u662f\u4ea7\u54c1\u4ece\u6d41\u6c34\u7ebf\u4e0b\u6765\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7edf\u4e00\u6253\u5305\u653e\u5165\u4ed3\u5e93\u4e86\u3002"),(0,l.kt)("p",null," \u5f53\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u6d41\u7684\u65f6\u5019\uff0c\u901a\u5e38\u5305\u62ec\u4e09\u4e2a\u57fa\u672c\u6b65\u9aa4\uff1a\u83b7\u53d6\u4e00\u4e2a\u6570\u636e\u6e90\uff08source\uff09\u2192 \u6570\u636e\u8f6c\u6362 \u2192 \u6267\u884c\u64cd\u4f5c\u83b7\u53d6\u60f3\u8981\u7684\u7ed3\u679c\u3002",(0,l.kt)("strong",{parentName:"p"},"\u6bcf\u6b21\u8f6c\u6362\u539f\u6709Stream\u5bf9\u8c61\u4e0d\u6539\u53d8\uff0c\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684Stream\u5bf9\u8c61\uff08\u53ef\u4ee5\u6709\u591a\u6b21\u8f6c\u6362\uff09"),"\uff0c\u8fd9\u5c31\u5141\u8bb8\u5bf9\u5176\u64cd\u4f5c\u53ef\u4ee5\u50cf\u94fe\u6761\u4e00\u6837\u6392\u5217\uff0c\u53d8\u6210\u4e00\u4e2a\u7ba1\u9053\uff0c\u5982\u4e0b\u56fe\u6240\u793a:"),(0,l.kt)("p",null,"Stream\u6709\u51e0\u4e2a\u7279\u6027\uff1a"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Stream\u4e0d\u5b58\u50a8\u6570\u636e\uff0c\u800c\u662f\u6309\u7167\u7279\u5b9a\u7684\u89c4\u5219\u5bf9\u6570\u636e\u8fdb\u884c\u8ba1\u7b97\uff0c\u4e00\u822c\u4f1a\u8f93\u51fa\u7ed3\u679c\u3002"),(0,l.kt)("li",{parentName:"ol"},"Stream\u4e0d\u4f1a\u6539\u53d8\u6570\u636e\u6e90\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\u4f1a\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u96c6\u5408\u6216\u4e00\u4e2a\u503c\u3002"),(0,l.kt)("li",{parentName:"ol"},"Stream\u5177\u6709\u5ef6\u8fdf\u6267\u884c\u7279\u6027\uff0c\u53ea\u6709\u8c03\u7528\u7ec8\u7aef\u64cd\u4f5c\u65f6\uff0c\u4e2d\u95f4\u64cd\u4f5c\u624d\u4f1a\u6267\u884c\u3002")),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://www.ydlclass.com/doc21xnv/assets/image-20210908180935125-49a6da24.png",alt:"image-20210908180935125"}),"image-20210908180935125"),(0,l.kt)("h3",{id:"1stream\u6d41\u7684\u521b\u5efa"},"1\u3001Stream\u6d41\u7684\u521b\u5efa"),(0,l.kt)("p",null,"\uff081\uff09Stream\u53ef\u4ee5\u901a\u8fc7\u96c6\u5408\u6570\u7ec4\u521b\u5efa\u3002"),(0,l.kt)("p",null,"1\u3001\u901a\u8fc7 java.util.Collection.stream() \u65b9\u6cd5\u7528\u96c6\u5408\u521b\u5efa\u6d41\uff0c\u6211\u4eec\u53d1\u73b0"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"default Stream<E> stream() {\n    return StreamSupport.stream(spliterator(), false);\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'List<String> list = Arrays.asList("a", "b", "c");\n// \u521b\u5efa\u4e00\u4e2a\u987a\u5e8f\u6d41\nStream<String> stream = list.stream();\n// \u521b\u5efa\u4e00\u4e2a\u5e76\u884c\u6d41\nStream<String> parallelStream = list.parallelStream();\n')),(0,l.kt)("p",null,"\uff082\uff09\u4f7f\u7528java.util.Arrays.stream(T[] array)\u65b9\u6cd5\u7528\u6570\u7ec4\u521b\u5efa\u6d41"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"int[] array={1,3,5,6,8};\nIntStream stream = Arrays.stream(array);\n")),(0,l.kt)("p",null,"\uff083\uff09\u4f7f\u7528Stream\u7684\u9759\u6001\u65b9\u6cd5\uff1aof()\u3001iterate()\u3001generate()"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"Stream<Integer> stream = Stream.of(1, 2, 3, 4, 5, 6);\n\nStream<Integer> stream2 = Stream.iterate(0, (x) -> x + 3).limit(4);\nstream2.forEach(System.out::println);\n\nStream<Double> stream3 = Stream.generate(Math::random).limit(3);\nstream3.forEach(System.out::println);\n")),(0,l.kt)("h3",{id:"2stream\u7684\u7ec8\u6b62\u64cd\u4f5c"},"2\u3001Stream\u7684\u7ec8\u6b62\u64cd\u4f5c"),(0,l.kt)("p",null,"\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u540e\u7eed\u7684\u4f7f\u7528\uff0c\u6211\u4eec\u5148\u521d\u59cb\u5316\u4e00\u90e8\u5206\u6570\u636e\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"public class Person {\n    private String name;  // \u59d3\u540d\n    private int salary; // \u85aa\u8d44\n    private int age; // \u5e74\u9f84\n    private String sex; //\u6027\u522b\n    private String area;  // \u5730\u533a\n\n    public Person() {\n    }\n\n    public Person(String name, int salary, int age, String sex, String area) {\n        this.name = name;\n        this.salary = salary;\n        this.age = age;\n        this.sex = sex;\n        this.area = area;\n    }\n}\n")),(0,l.kt)("p",null,"\u521d\u59cb\u5316\u6570\u636e\uff0c\u6211\u4eec\u8bbe\u8ba1\u4e00\u4e2a\u7b80\u5355\u7684\u96c6\u5408\u548c\u4e00\u4e2a\u590d\u6742\u7684\u96c6\u5408\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'public class LambdaTest {\n\n    List<Person> personList = new ArrayList<Person>();\n    List<Integer> simpleList = Arrays.asList(15, 22, 9, 11, 33, 52, 14);\n\n    @Before\n    public void initData(){\n        personList.add(new Person("\u5f20\u4e09",3000,23,"\u7537","\u592a\u539f"));\n        personList.add(new Person("\u674e\u56db",7000,34,"\u7537","\u897f\u5b89"));\n        personList.add(new Person("\u738b\u4e94",5200,22,"\u5973","\u592a\u539f"));\n        personList.add(new Person("\u5c0f\u9ed1",1500,33,"\u5973","\u4e0a\u6d77"));\n        personList.add(new Person("\u72d7\u5b50",8000,44,"\u5973","\u5317\u4eac"));\n        personList.add(new Person("\u94c1\u86cb",6200,36,"\u5973","\u5357\u4eac"));\n    }\n}\n')),(0,l.kt)("h4",{id:"1\u904d\u5386\u5339\u914dforeachfindmatch"},"\uff081\uff09\u904d\u5386/\u5339\u914d\uff08foreach/find/match\uff09"),(0,l.kt)("p",null,"\u5c06\u6570\u636e\u6d41\u6d88\u8d39\u6389"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'@Test\npublic void foreachTest(){\n    // \u6253\u5370\u96c6\u5408\u7684\u5143\u7d20\n    simpleList.stream().forEach(System.out::println);\n    // \u5176\u5b9e\u53ef\u4ee5\u7b80\u5316\u64cd\u4f5c\u7684\n    simpleList.forEach(System.out::println);\n}\n\n\n@Test\npublic void findTest(){\n    // \u627e\u5230\u7b2c\u4e00\u4e2a\n    Optional<Integer> first = simpleList.stream().findFirst();\n    // \u968f\u4fbf\u627e\u4e00\u4e2a,\u53ef\u4ee5\u770b\u5230findAny()\u64cd\u4f5c\uff0c\u8fd4\u56de\u7684\u5143\u7d20\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\n    // \u5bf9\u4e8e\u540c\u4e00\u4e2a\u5217\u8868\u591a\u6b21\u8c03\u7528findAny()\u6709\u53ef\u80fd\u4f1a\u8fd4\u56de\u4e0d\u540c\u7684\u503c\u3002\n    // \u4f7f\u7528findAny()\u662f\u4e3a\u4e86\u66f4\u9ad8\u6548\u7684\u6027\u80fd\u3002\u5982\u679c\u662f\u6570\u636e\u8f83\u5c11\uff0c\u4e32\u884c\u5730\u60c5\u51b5\u4e0b\uff0c\u4e00\u822c\u4f1a\u8fd4\u56de\u7b2c\u4e00\u4e2a\u7ed3\u679c\uff0c\n    // \u5982\u679c\u662f\u5e76\u884c\u7684\u60c5\u51b5\uff0c\u90a3\u5c31\u4e0d\u80fd\u786e\u4fdd\u662f\u7b2c\u4e00\u4e2a\u3002\n    Optional<Integer> any = simpleList.parallelStream().findAny();\n    System.out.println("first = " + first.get());\n    System.out.println("any = " + any.get());\n}\n\n@Test\npublic void matchTest(){\n    // \u5224\u65ad\u6709\u6ca1\u6709\u4efb\u610f\u4e00\u4e2a\u4eba\u5e74\u9f84\u5927\u4e8e35\u5c81\n    boolean flag = personList.stream().anyMatch(item -> item.getAge() > 35);\n    System.out.println("flag = " + flag);\n\n    // \u5224\u65ad\u662f\u4e0d\u662f\u6240\u6709\u4eba\u5e74\u9f84\u90fd\u5927\u4e8e35\u5c81\n    flag = personList.stream().allMatch(item -> item.getAge() > 35);\n    System.out.println("flag = " + flag);\n}\n')),(0,l.kt)("h4",{id:"2\u5f52\u96c6tolisttosettomap"},"\uff082\uff09\u5f52\u96c6(toList/toSet/toMap)"),(0,l.kt)("p",null," \u56e0\u4e3a\u6d41\u4e0d\u5b58\u50a8\u6570\u636e\uff0c\u90a3\u4e48\u5728\u6d41\u4e2d\u7684\u6570\u636e\u5b8c\u6210\u5904\u7406\u540e\uff0c\u9700\u8981\u5c06\u6d41\u4e2d\u7684\u6570\u636e\u91cd\u65b0\u5f52\u96c6\u5230\u65b0\u7684\u96c6\u5408\u91cc\u3002",(0,l.kt)("inlineCode",{parentName:"p"},"toList"),"\u3001",(0,l.kt)("inlineCode",{parentName:"p"},"toSet"),"\u548c",(0,l.kt)("inlineCode",{parentName:"p"},"toMap"),"\u6bd4\u8f83\u5e38\u7528\u3002"),(0,l.kt)("p",null,"\u4e0b\u9762\u7528\u4e00\u4e2a\u6848\u4f8b\u6f14\u793a",(0,l.kt)("inlineCode",{parentName:"p"},"toList"),"\u3001",(0,l.kt)("inlineCode",{parentName:"p"},"toSet"),"\u548c",(0,l.kt)("inlineCode",{parentName:"p"},"toMap"),"\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"@Test\npublic void collectTest(){\n    // \u5224\u65ad\u6709\u6ca1\u6709\u4efb\u610f\u4e00\u4e2a\u4eba\u5e74\u9f84\u5927\u4e8e35\u5c81\n    List<Integer> collect = simpleList.stream().collect(Collectors.toList());\n    System.out.println(collect);\n    Set<Integer> collectSet = simpleList.stream().collect(Collectors.toSet());\n    System.out.println(collectSet);\n    Map<Integer,Integer> collectMap = simpleList.stream().collect(Collectors.toMap(item->item,item->item+1));\n    System.out.println(collectMap);\n}\n")),(0,l.kt)("h4",{id:"3-\u7edf\u8ba1countaveragingsummaxmin"},"\uff083\uff09 \u7edf\u8ba1(count/averaging/sum/max/min\uff09"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'@Test\npublic void countTest(){\n    // \u5224\u65ad\u6709\u6ca1\u6709\u4efb\u610f\u4e00\u4e2a\u4eba\u5e74\u9f84\u5927\u4e8e35\u5c81\n    long count = new Random().ints().limit(50).count();\n    System.out.println("count = " + count);\n    OptionalDouble average = new Random().ints().limit(50).average();\n    average.ifPresent(System.out::println);\n    int sum = new Random().ints().limit(50).sum();\n    System.out.println(sum);\n}\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u6848\u4f8b\uff1a\u83b7\u53d6\u5458\u5de5\u5de5\u8d44\u6700\u9ad8\u7684\u4eba")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"Optional<Person> max = personList.stream().max((p1, p2) -> p1.getSalary() - p2.getSalary());\nmax.ifPresent(item -> System.out.println(item.getSalary()));\n\n\u91cc\u8fb9\u7684\u6bd4\u8f83\u5668\u53ef\u4ee5\u6539\u4e3a\uff1aComparator.comparingInt(Person::getSalary)\n")),(0,l.kt)("h4",{id:"4\u5f52\u7ea6reduce"},"\uff084\uff09\u5f52\u7ea6(reduce)"),(0,l.kt)("p",null,"\u5f52\u7ea6\uff0c\u4e5f\u79f0\u7f29\u51cf\uff0c\u987e\u540d\u601d\u4e49\uff0c\u662f\u628a\u4e00\u4e2a\u6d41\u7f29\u51cf\u6210\u4e00\u4e2a\u503c\uff0c\u80fd\u5b9e\u73b0\u5bf9\u96c6\u5408\u6c42\u548c\u3001\u6c42\u4e58\u79ef\u548c\u6c42\u6700\u503c\u64cd\u4f5c\u3002"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u6848\u4f8b\uff1a\u6c42",(0,l.kt)("inlineCode",{parentName:"p"},"Integer"),"\u96c6\u5408\u7684\u5143\u7d20\u4e4b\u4e58\u79ef\u3002")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"@Test\npublic void reduceTest(){\n    Integer result = simpleList.stream().reduce(1,(n1, n2) -> n1*n2);\n    System.out.println(result);\n}\n")),(0,l.kt)("h4",{id:"5\u63a5\u5408joining"},"\uff085\uff09\u63a5\u5408(joining)"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"joining"),"\u53ef\u4ee5\u5c06Stream\u4e2d\u7684\u5143\u7d20\u7528\u7279\u5b9a\u7684\u8fde\u63a5\u7b26\uff08\u6ca1\u6709\u7684\u8bdd\uff0c\u5219\u76f4\u63a5\u8fde\u63a5\uff09\u8fde\u63a5\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'@Test\npublic void joiningTest(){\n        List<String> list = Arrays.asList("A", "B", "C");\n        String string = list.stream().collect(Collectors.joining("-"));\n        System.out.println("\u62fc\u63a5\u540e\u7684\u5b57\u7b26\u4e32\uff1a" + string);\n    }\n}\n')),(0,l.kt)("h4",{id:"6\u5206\u7ec4partitioningbygroupingby"},"\uff086\uff09\u5206\u7ec4(partitioningBy/groupingBy)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5206\u533a\uff1a\u5c06",(0,l.kt)("inlineCode",{parentName:"li"},"stream"),"\u6309\u6761\u4ef6\u5206\u4e3a\u4e24\u4e2a",(0,l.kt)("inlineCode",{parentName:"li"},"Map"),"\uff0c\u6bd4\u5982\u5458\u5de5\u6309\u85aa\u8d44\u662f\u5426\u9ad8\u4e8e8000\u5206\u4e3a\u4e24\u90e8\u5206\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5206\u7ec4\uff1a\u5c06\u96c6\u5408\u5206\u4e3a\u591a\u4e2aMap\uff0c\u6bd4\u5982\u5458\u5de5\u6309\u6027\u522b\u5206\u7ec4\u3002")),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://www.ydlclass.com/doc21xnv/assets/image-20210908182643127-583f0fbb.png",alt:"image-20210908182643127"}),"image-20210908182643127"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u6848\u4f8b\uff1a\u5c06\u5458\u5de5\u6309\u85aa\u8d44\u662f\u5426\u9ad8\u4e8e8000\u5206\u4e3a\u4e24\u90e8\u5206\uff1b\u5c06\u5458\u5de5\u6309\u6027\u522b\u548c\u5730\u533a\u5206\u7ec4")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'@Test\npublic void groupingByTest(){\n    // \u5c06\u5458\u5de5\u6309\u85aa\u8d44\u662f\u5426\u9ad8\u4e8e8000\u5206\u7ec4\n    Map<Boolean, List<Person>> part = personList.stream().collect(Collectors.partitioningBy(x -> x.getSalary() > 8000));\n    // \u5c06\u5458\u5de5\u6309\u6027\u522b\u5206\u7ec4\n    Map<String, List<Person>> group = personList.stream().collect(Collectors.groupingBy(Person::getSex));\n    // \u5c06\u5458\u5de5\u5148\u6309\u6027\u522b\u5206\u7ec4\uff0c\u518d\u6309\u5730\u533a\u5206\u7ec4\n    Map<String, Map<String, List<Person>>> group2 = personList.stream().collect(Collectors.groupingBy(Person::getSex, Collectors.groupingBy(Person::getArea)));\n    System.out.println("\u5458\u5de5\u6309\u85aa\u8d44\u662f\u5426\u5927\u4e8e8000\u5206\u7ec4\u60c5\u51b5\uff1a" + part);\n    System.out.println("\u5458\u5de5\u6309\u6027\u522b\u5206\u7ec4\u60c5\u51b5\uff1a" + group);\n    System.out.println("\u5458\u5de5\u6309\u6027\u522b\u3001\u5730\u533a\uff1a" + group2);\n}\n')),(0,l.kt)("h3",{id:"3stream\u4e2d\u95f4\u64cd\u4f5c"},"3\u3001Stream\u4e2d\u95f4\u64cd\u4f5c"),(0,l.kt)("h4",{id:"1\u7b5b\u9009filter"},"\uff081\uff09\u7b5b\u9009\uff08filter\uff09"),(0,l.kt)("p",null,"\u8be5\u64cd\u4f5c\u7b26\u9700\u8981\u4f20\u5165\u4e00\u4e2afunction\u51fd\u6570"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u7b5b\u9009\u51fa",(0,l.kt)("inlineCode",{parentName:"p"},"simpleList"),"\u96c6\u5408\u4e2d\u5927\u4e8e17\u7684\u5143\u7d20\uff0c\u5e76\u6253\u5370\u51fa\u6765")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"simpleList.stream().filter(item -> item > 17).forEach(System.out::println);\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u7b5b\u9009\u5458\u5de5\u4e2d\u5de5\u8d44\u9ad8\u4e8e8000\u7684\u4eba\uff0c\u5e76\u5f62\u6210\u65b0\u7684\u96c6\u5408\u3002")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'List<Person> collect = personList.stream().filter(item -> item.getSalary() > 8000).collect(Collectors.toList());\nSystem.out.println("collect = " + collect);\n')),(0,l.kt)("h4",{id:"2\u6620\u5c04mapflatmap"},"\uff082\uff09\u6620\u5c04(map/flatMap)"),(0,l.kt)("p",null,"\u6620\u5c04\uff0c\u53ef\u4ee5\u5c06\u4e00\u4e2a\u6d41\u7684\u5143\u7d20\u6309\u7167\u4e00\u5b9a\u7684\u6620\u5c04\u89c4\u5219\u6620\u5c04\u5230\u53e6\u4e00\u4e2a\u6d41\u4e2d\u3002\u5206\u4e3a",(0,l.kt)("inlineCode",{parentName:"p"},"map"),"\u548c",(0,l.kt)("inlineCode",{parentName:"p"},"flatMap"),"\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"map"),"\uff1a\u63a5\u6536\u4e00\u4e2a\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\uff0c\u8be5\u51fd\u6570\u4f1a\u88ab\u5e94\u7528\u5230\u6bcf\u4e2a\u5143\u7d20\u4e0a\uff0c\u5e76\u5c06\u5176\u6620\u5c04\u6210\u4e00\u4e2a\u65b0\u7684\u5143\u7d20\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"flatMap"),"\uff1a\u63a5\u6536\u4e00\u4e2a\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\uff0c\u5c06\u6d41\u4e2d\u7684\u6bcf\u4e2a\u503c\u90fd\u6362\u6210\u53e6\u4e00\u4e2a\u6d41\uff0c\u7136\u540e\u628a\u6240\u6709\u6d41\u8fde\u63a5\u6210\u4e00\u4e2a\u6d41\u3002")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u6848\u4f8b\uff1a\u5c06\u5458\u5de5\u7684\u85aa\u8d44\u5168\u90e8\u589e\u52a01000\u3002")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"personList.stream().map(item -> {\n    item.setSalary(item.getSalary()+1000);\n    return item;\n}).forEach(System.out::println);\n")),(0,l.kt)("p",null,"\u5c06simpleList\u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32list"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"List<String> collect = simpleList.stream().map(num -> Integer.toString(num))\n                .collect(Collectors.toList());\n")),(0,l.kt)("h4",{id:"3\u6392\u5e8fsorted"},"\uff083\uff09\u6392\u5e8f(sorted)"),(0,l.kt)("p",null,"sorted\uff0c\u4e2d\u95f4\u64cd\u4f5c\u3002\u6709\u4e24\u79cd\u6392\u5e8f\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"sorted()\uff1a\u81ea\u7136\u6392\u5e8f\uff0c\u6d41\u4e2d\u5143\u7d20\u9700\u5b9e\u73b0Comparable\u63a5\u53e3"),(0,l.kt)("li",{parentName:"ul"},"sorted(Comparator com)\uff1aComparator\u6392\u5e8f\u5668\u81ea\u5b9a\u4e49\u6392\u5e8f")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u6848\u4f8b\uff1a\u5c06\u5458\u5de5\u6309\u5de5\u8d44\u7531\u9ad8\u5230\u4f4e\uff08\u5de5\u8d44\u4e00\u6837\u5219\u6309\u5e74\u9f84\u7531\u5927\u5230\u5c0f\uff09\u6392\u5e8f")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'@Test\npublic void sortTest(){\n    // \u6309\u5de5\u8d44\u5347\u5e8f\u6392\u5e8f\uff08\u81ea\u7136\u6392\u5e8f\uff09\n    List<String> newList = personList.stream().sorted(Comparator.comparing(Person::getSalary)).map(Person::getName)\n        .collect(Collectors.toList());\n    // \u6309\u5de5\u8d44\u5012\u5e8f\u6392\u5e8f\n    List<String> newList2 = personList.stream().sorted(Comparator.comparing(Person::getSalary).reversed())\n        .map(Person::getName).collect(Collectors.toList());\n    // \u5148\u6309\u5de5\u8d44\u518d\u6309\u5e74\u9f84\u5347\u5e8f\u6392\u5e8f\n    List<String> newList3 = personList.stream()\n        .sorted(Comparator.comparing(Person::getSalary).thenComparing(Person::getAge)).map(Person::getName)\n        .collect(Collectors.toList());\n    // \u5148\u6309\u5de5\u8d44\u518d\u6309\u5e74\u9f84\u81ea\u5b9a\u4e49\u6392\u5e8f\uff08\u964d\u5e8f\uff09\n    List<String> newList4 = personList.stream().sorted((p1, p2) -> {\n        if (p1.getSalary() == p2.getSalary()) {\n            return p2.getAge() - p1.getAge();\n        } else {\n            return p2.getSalary() - p1.getSalary();\n        }\n    }).map(Person::getName).collect(Collectors.toList());\n\n    System.out.println("\u6309\u5de5\u8d44\u5347\u5e8f\u6392\u5e8f\uff1a" + newList);\n    System.out.println("\u6309\u5de5\u8d44\u964d\u5e8f\u6392\u5e8f\uff1a" + newList2);\n    System.out.println("\u5148\u6309\u5de5\u8d44\u518d\u6309\u5e74\u9f84\u5347\u5e8f\u6392\u5e8f\uff1a" + newList3);\n    System.out.println("\u5148\u6309\u5de5\u8d44\u518d\u6309\u5e74\u9f84\u81ea\u5b9a\u4e49\u964d\u5e8f\u6392\u5e8f\uff1a" + newList4);\n}\n')),(0,l.kt)("h4",{id:"4peek\u64cd\u4f5c"},"\uff084\uff09peek\u64cd\u4f5c"),(0,l.kt)("p",null,"peek\u7684\u8c03\u8bd5\u4f5c\u7528"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"@Test\npublic void peekTest(){\n    // \u5728stream\u4e2d\u95f4\u8fdb\u884c\u8c03\u8bd5\uff0c\u56e0\u4e3astream\u4e0d\u652f\u6301debug\n    List<Person> collect = personList.stream().filter(p -> p.getSalary() > 5000)\n        .peek(System.out::println).collect(Collectors.toList());\n    // \u4fee\u6539\u5143\u7d20\u7684\u4fe1\u606f\uff0c\u7ed9\u6bcf\u4e2a\u5458\u5de5\u6da8\u5de5\u8d44\u4e00\u5343\n    personList.stream().peek(p -> p.setSalary(p.getSalary() + 1000))\n        .forEach(System.out::println);\n}\n")),(0,l.kt)("h4",{id:"5\u5176\u4ed6\u64cd\u4f5c"},"\uff085\uff09\u5176\u4ed6\u64cd\u4f5c"),(0,l.kt)("p",null,"\u6d41\u4e5f\u53ef\u4ee5\u8fdb\u884c\u5408\u5e76\u3001\u53bb\u91cd\u3001\u9650\u5236\u3001\u8df3\u8fc7\u7b49\u64cd\u4f5c\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"@Test\npublic void otherTest(){\n    // distinct\u53bb\u6389\u91cd\u590d\u6570\u636e   \n    // skip\u8df3\u8fc7\u51e0\u4e2a\u6570\u636e\n    // limit\u9650\u5236\u4f7f\u7528\u51e0\u4e2a\u6570\u636e\n    simpleList.stream().distinct().skip(2).limit(3).forEach(System.out::println);\n}\n\n//  11,11,22,22,11,23,43,55,78\n//  \u53bb\u91cd  11\uff0c22,23,43,55,78\n//  \u6389\u8fc7\u4e24\u4e2a  23\uff0c43,55,78\n// \u4f7f\u75283\u4e2a    23,43,55\n")))}c.isMDXComponent=!0}}]);